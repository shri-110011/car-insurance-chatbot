{"version":3,"sources":["./src/app/admin/admin-helper.service.ts","./src/app/admin/admin-routing.module.ts","./src/app/admin/chat-detail/chat-detail.component.ts","./src/app/admin/chat-detail/chat-detail.component.html","./src/app/admin/car-insurance-detail/car-insurance-detail.component.ts","./src/app/admin/car-insurance-detail/car-insurance-detail.component.html","./src/app/admin/chatlog/chatlog.component.ts","./src/app/admin/chatlog/chatlog.component.html","./src/app/admin/dashboard.component.ts","./src/app/admin/dashboard.component.html","./src/app/admin/admin.module.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ChatMessage, ChatMessageDetail, InsuranceDetail } from \"./info-structure\";\r\nimport { environment } from \"../../environments/environment\"; \r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AdminHelperService {\r\n\r\n    private _getChatDetailApi = environment.apiURL+\"chat/getChatDetail\";\r\n    private _getChatApi = environment.apiURL+\"chat/getChat\";\r\n\r\n    private _getInsuranceDetailApi = environment.apiURL+\"car-insurance/getInsuranceDetail\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getChatDetail(): Observable<ChatMessageDetail[]> {\r\n        return this.http.post<ChatMessageDetail[]>(this._getChatDetailApi, {});\r\n    }\r\n\r\n    getChat(chatCount: number): Observable<ChatMessage[]> {\r\n        // console.log(\"Inside getChat service\");\r\n        return this.http.post<ChatMessage[]>(this._getChatApi, {chatCount: chatCount});\r\n    }\r\n\r\n    getInsuranceDetail(): Observable<InsuranceDetail[]> {\r\n        return this.http.post<InsuranceDetail[]>(this._getInsuranceDetailApi, {});\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CarInsuranceDetailsComponent } from './car-insurance-detail/car-insurance-detail.component';\r\n\r\nimport { ChatDetailComponent } from './chat-detail/chat-detail.component';\r\nimport { ChatlogComponent } from './chatlog/chatlog.component';\r\nimport { DashBoardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DashBoardComponent,\r\n        children: [\r\n            {\r\n                path: 'chatlog',\r\n                component: ChatlogComponent\r\n            },\r\n            {\r\n                path: 'chat-details',\r\n                component: ChatDetailComponent\r\n            },\r\n            {\r\n                path: 'insurance-details',\r\n                component: CarInsuranceDetailsComponent\r\n            }\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ChatMessageDetail } from '../info-structure';\nimport { AdminHelperService } from '../admin-helper.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-chat-detail',\n  templateUrl: './chat-detail.component.html',\n  styleUrls: ['./chat-detail.component.css']\n})\nexport class ChatDetailComponent implements OnInit, OnDestroy {\n\n  totalChats = 0;\n  chatDetails: ChatMessageDetail[] = [];\n\n  getChatDetailSub: Subscription;\n  isLoading = true;\n\n  constructor(private adminHelperService: AdminHelperService) { }\n\n  ngOnInit(): void {\n    this.getChatDetailSub = this.adminHelperService.getChatDetail().pipe(\n      map((data)=>{\n        data.forEach(obj=>{\n          this.totalChats += obj['chatCount']; \n        })\n        return data;\n      })\n    )\n    .subscribe(res=> {\n      console.log(res);\n      this.chatDetails = res;\n      this.isLoading = false;\n    })\n  }\n\n  //Code to convert chat count correspoding to each chat intent into percentage.\n  getChatPercentage(chatCount) {\n    return (chatCount*100/this.totalChats).toFixed(2);\n  }\n\n  ngOnDestroy() {\n    this.getChatDetailSub.unsubscribe();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 col-md-offset-1 table-responsive\" style=\"overflow-y: scroll; height: 300px; border: 1px solid black;\">\n        <table class=\"table table-border\">\n            <thead>\n                <tr>\n                    <th>S.No</th>\n                    <th>Intent</th>\n                    <th>No of Chats</th>\n                    <th>Percentage %</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let chatDetail of chatDetails, let i = index \">\n                    <td>{{ i+1 }}</td>\n                    <td>{{ chatDetail.chatIntent }}</td>\n                    <td>{{ chatDetail.chatCount }}</td>\n                    <td>{{ getChatPercentage(chatDetail.chatCount) }}</td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"isLoading\" class=\"spinner\">\n            <app-loading-spinner></app-loading-spinner>\n        </div>\n        <h3 style=\"text-align: center;\" *ngIf=\"!(chatDetails.length>0) && !isLoading\">There are no chat details!</h3>\n    </div>\n    <div class=\"col-md-3 col-md-offset-1\">\n        <h3>Total chats asked: {{ totalChats }}</h3>\n    </div>\n</div>\n\n\n\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { AdminHelperService } from \"../admin-helper.service\";\r\nimport { InsuranceDetail } from \"../info-structure\";\r\n\r\n@Component({\r\n    selector: 'app-car-insurance-details',\r\n    templateUrl: 'car-insurance-detail.component.html',\r\n    styleUrls: ['car-insurance-detail.component.css']\r\n})\r\nexport class CarInsuranceDetailsComponent implements OnInit, OnDestroy{\r\n\r\n    insuranceDetails: InsuranceDetail[] = [];\r\n    totalPolicyHolders = 0;\r\n    getInsuranceDetailSub: Subscription;\r\n    isLoading = true;\r\n\r\n    constructor(private adminHelperService: AdminHelperService) { }\r\n\r\n    ngOnInit() {\r\n        this.getInsuranceDetailSub = this.adminHelperService.getInsuranceDetail().pipe(\r\n            map((data)=>{\r\n                data.forEach(obj=>{\r\n                  this.totalPolicyHolders += obj['insuranceCount']; \r\n                })\r\n                return data;\r\n              })\r\n        )     \r\n        .subscribe(res=> {\r\n            console.log(res);\r\n            this.insuranceDetails = res;\r\n            this.isLoading = false\r\n        });\r\n    }\r\n\r\n    getChatPercentage(policiesCount) {\r\n        return (policiesCount*100/this.totalPolicyHolders).toFixed(2);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.getInsuranceDetailSub.unsubscribe();\r\n    }\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-6 col-md-offset-1 table-responsive\" style=\"height: 200px; border: 1px solid black;\">\r\n        <table class=\"table table-border\">\r\n            <thead>\r\n                <tr>\r\n                    <th>S.No</th>\r\n                    <th>Type of Insurance</th>\r\n                    <th>No of policy holders</th>\r\n                    <th>Percentage %</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let insuranceDetail of insuranceDetails, let i = index \">\r\n                    <td>{{ i+1 }}</td>\r\n                    <td>{{ insuranceDetail.insurancePlan }}</td>\r\n                    <td>{{ insuranceDetail.insuranceCount }}</td>\r\n                    <td>{{ getChatPercentage(insuranceDetail.insuranceCount) }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <div *ngIf=\"isLoading\" class=\"spinner\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n        <h3 style=\"text-align: center;\" *ngIf=\"!(insuranceDetails.length>0) && !isLoading\">There are no insurance details!</h3>\r\n    </div>\r\n    <div class=\"col-md-3 col-md-offset-1\">\r\n        <h3>Total policies applied: {{ totalPolicyHolders }}</h3>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AdminHelperService } from '../admin-helper.service';\nimport { ChatMessage } from '../info-structure';\n\n@Component({\n  selector: 'app-chatlog',\n  templateUrl: './chatlog.component.html',\n  styleUrls: ['./chatlog.component.css']\n})\nexport class ChatlogComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @ViewChild('chatCount') chatCount: ElementRef;\n  chats: ChatMessage[];\n  \n  getChatSub: Subscription;\n  isLoading = true;\n\n  constructor(private adminHelperService: AdminHelperService) { }\n\n  ngOnInit(): void {\n    // Here we are initializing the chats to an empty array.\n    this.chats = [];\n  }\n\n  //Code to get the chat details once the admin clicks the chatlog button \n  ngAfterViewInit() {\n    this.getChatSub = this.adminHelperService.getChat(+this.chatCount.nativeElement.value).subscribe(res=> {\n      console.log(res);\n      this.chats = res;\n      this.isLoading = false;\n    })\n  }\n  onGetChats() {\n    console.log(typeof +this.chatCount.nativeElement.value);\n    this.getChatSub = this.adminHelperService.getChat(+this.chatCount.nativeElement.value).subscribe(res=> {\n      console.log(res);\n      this.chats = res;\n    })\n  }\n\n  getChatDate(utcDate) {\n    return new Date(utcDate).toString().slice(0, 33);\n  }\n\n  ngOnDestroy() {\n    this.getChatSub.unsubscribe();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-9\" style=\"overflow-y: scroll; height: 300px; border: 1px solid black;\">\n        <table class=\"table table-border\">\n            <thead>\n                <tr>\n                    <th>S.No</th>\n                    <th>Chat Message</th>\n                    <th>Chat Intent</th>\n                    <th>Chat Date</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let chat of chats, let i = index\">\n                    <td>{{ i+1 }}</td>\n                    <td>{{ chat.chatMessage }}</td>\n                    <td>{{ chat.chatIntent}}</td>\n                    <td>{{ getChatDate(chat.chatDate) }}</td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"isLoading\" class=\"spinner\">\n            <app-loading-spinner></app-loading-spinner>\n        </div>\n        <h3 style=\"text-align: center;\" *ngIf=\"!(chats.length>0) && !isLoading\">There are no chats!</h3>\n    </div>\n    <div class=\"col-md-3\">\n        <div class=\"form-group\">\n            <label for=\"\">Select the number of latest chats you want to see: </label>\n                <select class=\"form-control\" #chatCount>\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"30\">30</option>\n                </select><br>\n                <button class=\"btn btn-primary\" (click)=\"onGetChats()\">Get Chats</button><br>\n        </div>\n    </div>\n</div>\n\n","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LoginService } from \"../Forms/Login/login.service\";\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: 'dashboard.component.html',\r\n    styleUrls: ['dashboard.component.css']\r\n})\r\nexport class DashBoardComponent {\r\n    userName = \"\";\r\n    constructor(private loginService: LoginService,\r\n                private router: Router) { \r\n    }\r\n\r\n    ngOnInit() {\r\n        /*This is a mandatory check to prevent a logged in user from entering into the \r\n        admin view from the url bar.*/\r\n        if(this.loginService.getLoggedInUser()['isAdmin']){\r\n            this.userName = this.loginService.getLoggedInUser()['userName'];\r\n        }\r\n        else{\r\n            this.router.navigate(['/home']);\r\n        }\r\n       \r\n    }\r\n}","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"dropdown\">\r\n                <button class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\">Statistics \r\n                    <span class=\"caret\"></span>\r\n                </button>\r\n                <ul class=\"dropdown-menu\">\r\n                    <li><a routerLink=\"chat-details\">View chat statistics</a></li>\r\n                    <li><a routerLink=\"insurance-details\">View insurance statistics</a></li>\r\n                </ul>\r\n                <button class=\"btn btn-primary\" routerLink=\"chatlog\">Chatlog</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { DashBoardComponent } from './dashboard.component';\r\nimport { ChatlogComponent } from './chatlog/chatlog.component';\r\nimport { ChatDetailComponent } from './chat-detail/chat-detail.component';\r\nimport { CarInsuranceDetailsComponent } from './car-insurance-detail/car-insurance-detail.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DashBoardComponent,\r\n        ChatlogComponent,\r\n        ChatDetailComponent,\r\n        CarInsuranceDetailsComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AdminRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class AdminModule { }\r\n\r\n"],"sourceRoot":"webpack:///"}