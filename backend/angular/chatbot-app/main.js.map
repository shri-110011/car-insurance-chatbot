{"version":3,"sources":["./src/app/Forms/Login/login.component.ts","./src/app/Forms/Login/login.component.html","./src/app/static-components/home/home.component.ts","./src/app/static-components/home/home.component.html","./src/app/static-components/about-us/about-us.component.ts","./src/app/static-components/about-us/about-us.component.html","./src/app/auth-guard.service.ts","./src/environments/environment.ts","./src/app/shared/matchFields.directive.ts","./src/app/chat-window/chat-window.component.ts","./src/app/chat-window/chat-window.component.html","./src/app/Forms/Registration/registration.service.ts","./src/app/shared/shared.module.ts","./src/app/chat-window/user-msg-block/user-msg-block.component.ts","./src/app/chat-window/user-msg-block/user-msg-block.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Forms/Login/login.service.ts","./src/app/app.module.ts","./src/app/chat-window/chat.service.ts","./src/app/chat-window/chatbot-msg-block/chatbot-msg-block.component.ts","./src/app/chat-window/chatbot-msg-block/chatbot-msg-block.component.html","./src/app/auth-service.ts","./src/app/Forms/Registration/registration.component.ts","./src/app/Forms/Registration/registration.component.html","./src/app/static-components/header/header.component.ts","./src/app/static-components/header/header.component.html","./src/app/static-components/page-not-found/page-not-found.component.ts","./src/app/static-components/page-not-found/page-not-found.component.html","./src/app/static-components/contacts/contacts.component.ts","./src/app/static-components/contacts/contacts.component.html","./src/app/app-routing.module.ts","./src/app/static-components/footer/footer.component.ts","./src/app/static-components/footer/footer.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/shared/loading-spinner/loading-spinner.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;;;ICY7C,4EAAiE;IAAA,4EAAiB;IAAA,4DAAQ;;;IAC1F,4EAAgE;IAAA,wEAAa;IAAA,4DAAQ;;;IAFzF,sEACI;IAAA,sHAA0F;IAC1F,sHAAqF;IACzF,4DAAM;;;;IAFkC,0DAA2B;IAA3B,qFAA2B;IAC3B,0DAA0B;IAA1B,oFAA0B;;;IAMlE,4EAAgF;IAAA,+EAAoB;IAAA,4DAAQ;;;IAY5G,4EAAmD;IAAA,kGAAuC;IAAA,4DAAQ;;;IAClG,4EAA8E;IAAA,sFAA2B;IAAA,4DAAQ;;ADpBtH,MAAM,cAAc;IAMvB,YAAoB,YAA0B,EAC1B,MAAc,EACd,WAAwB,EACxB,KAAqB;QAHrB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QAPzC,2BAAsB,GAAG,KAAK,CAAC;QAC/B,aAAQ,GAAG,EAAE,CAAC;QACd,oBAAe,GAAG,KAAK,CAAC;IAKqB,CAAC;IAE9C,QAAQ;QACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC5D,8BAA8B;QAC9B,2BAA2B;QAC3B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,GAAE;YAC1C,oBAAoB;YACpB,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC,CAAC;IACN,CAAC;IAED,OAAO;QACH,IAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC;YACpB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEvC,6CAA6C;YAC7C,IAAG,IAAI,CAAC,QAAQ,KAAK,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAC;gBACrD,uBAAuB;gBACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC;aAClD;iBACG;gBACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;aACzD;YAED,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAChE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACxD,IAAG,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,EAAC;oBACrF,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;oBACnC,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;iBACzE;qBACG;oBACI,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;oBACzC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;oBACzC,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;oBACpD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBACvB,MAAM,cAAc,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,SAAS,GAAC,IAAI,CAAC,CAAC;oBACvE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;oBAC5B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,GAAC,IAAI,CAAC,CAAC;oBAC7C,IAAG,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,EAAC;wBAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACpC;yBACG;wBACA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBACnC;iBACR;YACL,CAAC,CAAC,CAAC;SACN;aACG;YACA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC/B;IAEL,CAAC;;4EAhEQ,cAAc;8FAAd,cAAc;;;;;;QCT3B,yEACI;QAAA,yEACI;QAAA,uEACJ;QAAA,4DAAM;QACN,6EACI;QAD6C,0IAAY,aAAS,IAAC;QACnE,yEACI;QAAA,yEACA;QAAA,wEAAO;QAAA,wEAAa;QAAA,4DAAQ;QAC5B,4GAGM;QACV,4DAAM;QACN,0EACI;QAAA,0EACA;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,iHAA4G;QAChH,4DAAM;QAUN,2EACI;QAAA,iHAAkG;QAClG,iHAAiH;QACrH,4DAAM;QACN,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,2EACI;QAAA,4EAAe;QAAA,yEAA8B;QAAA,sEAAU;QAAA,4DAAI;QAC/D,4DAAM;QACV,4DAAO;QACX,4DAAM;;;;QA9BY,2DAAsD;QAAtD,4GAAsD;QAQxB,0DAA0C;QAA1C,4FAA0C;QAYlD,0DAAqB;QAArB,qFAAqB;QACrB,0DAAgD;QAAhD,oHAAgD;;6FDpB3E,cAAc;cAN1B,uDAAS;eAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aAEvC;mUAE2B,SAAS;kBAAhC,uDAAS;mBAAC,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;AEb1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICsB9C,yEACI;IAAA,yEACI;IAAA,4EAKI;IAAA,4EACJ;IAAA,4DAAS;IACT,4EAKI;IAAA,8EACJ;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAM;;IAZM,0DAAkC;IAAlC,8IAAkC;IAOlC,0DAAmC;IAAnC,8IAAmC;;ADzB5C,MAAM,aAAa;IAMtB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJ5C,iBAAY,GAAG,KAAK,CAAC;IAI2B,CAAC;IAEjD,QAAQ;QACJ,oDAAoD;QACpD,IAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,EAAC;YACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,mDAAmD;SACtD;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,4BAA4B;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,GAAE,EAAE;YAChE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC;IACN,CAAC;IAED,WAAW;QACP,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;;0EA1BQ,aAAa;6FAAb,aAAa;QCT1B,yEACI;QAAA,yEACQ;QAAA,yEACI;QAAA,qEAAI;QAAA,+FAAoC;QAAA,4DAAK;QAC7C,gEACA;QAAA,oEACI;QAAA,yJAEJ;QAAA,4DAAI;QACJ,oEACI;QAAA,+KAEJ;QAAA,4DAAI;QACJ,qEACI;QAAA,yIACkB;QAAA,qEAAG;QAAA,mEAAO;QAAA,4DAAI;QAAA,0FACpC;QAAA,4DAAI;QACR,4DAAM;QACN,0EACI;QAAA,qEACJ;QAAA,4DAAM;QACd,4DAAM;QACN,2GAiBM;QACV,4DAAM;;QAlBgB,2DAAmB;QAAnB,mFAAmB;;6FDb5B,aAAa;cALzB,uDAAS;eAAC;gBACP,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAA0C;;AAOnC,MAAM,gBAAgB;;gFAAhB,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEACI;QAAA,yEACI;QAAA,yEACI;QAEA,oEAAG;QAAA,8EAAmB;QAAA,4DAAI;QAC1B,gEACA;QAAA,oEAAG;QAAA,+EAAoB;QAAA,4DAAI;QAC3B,gEACA;QAAA,oEAAG;QAAA,uHAA2D;QAAA,4DAAI;QAClE,iEACA;QAAA,qEAAG;QAAA,kFAAsB;QAAA,4DAAI;QACjC,4DAAM;QACN,0EACI;QACA,qEAAG;QAAA,4EAAgB;QAAA,4DAAI;QACvB,iEACA;QAAA,qEAAG;QAAA,gFAAoB;QAAA,4DAAI;QAC3B,iEACA;QAAA,qEAAG;QAAA,uHAA2D;QAAA,4DAAI;QAClE,iEACA;QAAA,qEAAG;QAAA,kFAAsB;QAAA,4DAAI;QACjC,4DAAM;QACV,4DAAM;QACV,4DAAM;;6FDjBO,gBAAgB;cAL5B,uDAAS;eAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;;AAYpC,MAAM,SAAS;IAClB,YAAoB,WAAwB,EACxB,YAA0B,EAC1B,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IACtC,WAAW,CAAC,KAA6B,EAC7B,KAA0B;QAClC,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,IAAI,CAC1C,CAAC,aAAsB,EAAC,EAAE;YACtB,oCAAoC;YACpC,gDAAgD;YAChD,IAAG,aAAa,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC;gBACzE,OAAO,IAAI,CAAC;aACf;iBACI;gBACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/B;QACL,CAAC,CACJ;IACL,CAAC;;kEAnBQ,SAAS;4FAAT,SAAS,WAAT,SAAS;6FAAT,SAAS;cADrB,wDAAU;;;;;;;;;;;;;;ACXX;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,wBAAwB;CACjC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAiD;AAC0B;;AAUpE,MAAM,cAAc;IAEvB,QAAQ,CAAC,OAAwB;QAC7B,MAAM,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjE,oBAAoB;QACpB,IAAG,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,OAAO,CAAC,KAAK,KAAK,gBAAgB,CAAC,KAAK;YAC/D,OAAO,IAAI,CAAC;;YAEZ,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;IAClC,CAAC;;4EATQ,cAAc;8FAAd,cAAc,qKANZ,CAAC;gBACR,OAAO,EAAE,4DAAa;gBACtB,WAAW,EAAE,cAAc;gBAC3B,KAAK,EAAE,IAAI;aACd,CAAC;6FAEO,cAAc;cAR1B,uDAAS;eAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,SAAS,EAAE,CAAC;wBACR,OAAO,EAAE,4DAAa;wBACtB,WAAW,gBAAgB;wBAC3B,KAAK,EAAE,IAAI;qBACd,CAAC;aACL;gBAEY,cAAc;kBAAtB,mDAAK;;;;;;;;;;;;;;ACZV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO+B;AAI4D;AACT;;;;;;;AAQ3E,MAAM,mBAAmB;IAU5B,mEAAmE;IACnE,4IAA4I;IAE5I,8CAA8C;IAC9C,2IAA2I;IAG3I,YAAoB,YAAyB,EACzB,wBAAkD,EAClD,SAAuB;QAFvB,iBAAY,GAAZ,YAAY,CAAa;QACzB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,cAAS,GAAT,SAAS,CAAc;QAd3C,iBAAY,GAAY,EAAE,CAAC;IAevB,CAAC;IAEL,KAAK,CAAC,OAAyB;QAC1B,6CAA6C;QAC9C,uBAAuB;QAEvB,qDAAqD;QACrD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEhD,yDAAyD;QACzD,qGAAqG;QAErG,wFAAwF;QACxF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;YACvD,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;QAEzC,kEAAkE;QAClE,iFAAiF;IAErF,CAAC;IAED,uBAAuB;QACnB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAC,CAAC,EAAE,EAAE;YACrC,UAAU,CAAC,GAAE,EAAE;gBACX,CAAC,EAAE,CAAC;gBACJ,+BAA+B;gBAC/B,yBAAyB;gBACzB,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC;gBAC9C,kDAAkD;YACtD,CAAC,EAAE,GAAG,GAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,2BAA2B,CAAC,OAAO;QAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACjE,8FAAqB,CACxB,CAAC;QACF,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC1D,YAAY,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;IAC5C,CAAC;IAED,8BAA8B,CAAC,OAAO;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACjE,uGAAwB,CAC3B,CAAC;QACF,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC1D,YAAY,CAAC,QAAQ,CAAC,UAAU,GAAE,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;QAClF,YAAY,CAAC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,GAAE,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,mBAAmB,CAAC,EAAE;QAClB,6CAA6C;QAC7C,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAE,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/B,8EAA8E;YAC9E,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACX,UAAU,CAAC,GAAE,EAAE,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;IAED,WAAW;QACP,+BAA+B;QAC/B,IAAG,IAAI,CAAC,YAAY,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACnC;QACD,IAAG,IAAI,CAAC,6BAA6B,EAAE;YACnC,IAAI,CAAC,6BAA6B,CAAC,WAAW,EAAE,CAAC;SACpD;IACL,CAAC;;sFArGQ,mBAAmB;mGAAnB,mBAAmB;6EAEK,8DAAgB;;;;;;;;QCtBrD,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,2MAAuC;QAC3C,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,4EAAkI;QACtI,4DAAM;QACN,2EAAkB;QAAA,8EAA0E;QAA5B,yRAAS,cAAiB,IAAC;QAAC,+DAAG;QAAA,4DAAS;QAAA,4DAAM;QAClH,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;6FDIO,mBAAmB;cAL/B,uDAAS;eAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC7C;6QAGuE,MAAM;kBAAzE,uDAAS;mBAAC,YAAY,EAAE,EAAE,IAAI,EAAE,8DAAgB,EAAE,MAAM,EAAE,KAAK,EAAE;YACzC,UAAU;kBAAlC,uDAAS;mBAAC,YAAY;;;;;;;;;;;;;;AEtB3B;AAAA;AAAA;AAAA;AAA2C;;;AAIpC,MAAM,mBAAmB;IAI5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,qBAAgB,GAAG,qCAAqC,CAAC;IAEzB,CAAC;IAEzC,YAAY,CAAC,IAAS;QAClB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC1C,oBAAoB;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,gBAAgB,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;IAC3E,CAAC;;sFAVQ,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB;6FAAnB,mBAAmB;cAD/B,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACN;AAC6C;AAC7B;;AAalD,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBANZ,CAAC,4DAAY,CAAC;mIAMd,YAAY,mBATjB,qEAAc;QACd,kGAAuB,aAEjB,4DAAY,aAElB,qEAAc;QACd,kGAAuB;6FAGlB,YAAY;cAXxB,sDAAQ;eAAC;gBACN,YAAY,EAAE;oBACV,qEAAc;oBACd,kGAAuB;iBAC1B;gBACD,OAAO,EAAE,CAAC,4DAAY,CAAC;gBACvB,OAAO,EAAE;oBACL,qEAAc;oBACd,kGAAuB;iBAC1B;aACJ;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAA0C;;AAOnC,MAAM,qBAAqB;IAM9B;QAJA,YAAO,GAAG,EAAE,CAAC;QAEb,YAAO,GAAG,EAAE,CAAC;IAEG,CAAC;IAEjB,sFAAsF;IACtF,QAAQ;QACJ,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC9B,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,GAAC,EAAE;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAC,IAAI,GAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;;YAE9E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAC,GAAG,GAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACrF,CAAC;;0FAfQ,qBAAqB;qGAArB,qBAAqB;QCPlC,yEACI;QAAA,yEACI;QAAA,uDAAa;QAAA,0EAAuB;QAAA,sEAAK;QAAA,uDAAa;QAAA,4DAAM;QAAA,4DAAO;QACvE,4DAAM;QACV,4DAAM;;QAFE,0DAAa;QAAb,sFAAa;QAA4B,0DAAa;QAAb,4EAAa;;6FDKjD,qBAAqB;cALjC,uDAAS;eAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAChD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAW3C,MAAM,YAAY;IAEvB,YAAoB,YAA0B,EAC1B,WAAwB;QADxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEf,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAChD,oDAAoD;QACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAiB,EAAC,EAAE;YAChG,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;YAC/C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAG,GAAG,CAAC,eAAe,CAAC,EAAC;gBACtB,+BAA+B;gBAC/B,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBACvC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,GAAC,IAAI,CAAC,CAAC;gBACpD,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBACzC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC1C;QACH,CAAC,CAAC;IACJ,CAAC;;wEArBU,YAAY;4FAAZ,YAAY;QCXzB,wEAAyB;QAGzB,2EAA+B;QAE/B,wEAAyB;;6FDMZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACG;AACG;AAGe;;;;AAGzD,MAAM,YAAY;IAUrB,YAAoB,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;QATpC,cAAS,GAAG,qEAAW,CAAC,MAAM,GAAC,YAAY,CAAC;QAC5C,eAAU,GAAG,qEAAW,CAAC,MAAM,GAAC,aAAa,CAAC;QAC9C,oBAAe,GAAG,qEAAW,CAAC,MAAM,GAAC,YAAY,CAAC;IAOV,CAAC;IAEjD,KAAK,CAAC,eAAe;QACjB,uCAAuC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,SAAS,EAAE,EAAC,eAAe,EAAE,eAAe,EAAC,CAAC;aAChF,IAAI,CAAC,iEAAU,CAAC,CAAC,QAA2B,EAAC,EAAE;YACxC,OAAO,uDAAU,CAAC,QAAQ,CAAC;QAC/B,CAAC,CAAC,CAQL,CAAC;IACN,CAAC;IAED,MAAM,CAAC,YAA0B;QAC7B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,UAAU,EAAE,EAAC,YAAY,EAAE,YAAY,EAAC,CAAC,CAAC;IACjF,CAAC;IAED,UAAU,CAAC,kBAAkB;QACzB,UAAU,CAAC,GAAE,EAAE;YACX,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACpC,CAAC,EAAE,kBAAkB,CAAC,CAAC;IAC3B,CAAC;IAED,WAAW,CAAC,YAAiB;QACzB,6CAA6C;QAC7C,6BAA6B;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,eAAe,EAAE,EAAC,YAAY,EAAE,YAAY,EAAC,CAAC,CAAC;IACtF,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,YAA0B;QACtC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACrC,CAAC;;wEAtDQ,YAAY;+FAAZ,YAAY,WAAZ,YAAY;6FAAZ,YAAY;cADxB,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AAC4B;AAEmB;AACS;AAC/C;AACC;AACqB;AACZ;AACP;AACV;AACJ;AACiC;AACxB;;;;;;;;AACtD,4EAA4E;AA4BrE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBART,CAAC,qEAAW;QACX,wEAAY;QACZ,8DAAS;QACT,0DAAW;QACX,8DAA8D;KAC/D,YAbF;YACP,uEAAa;YACb,qEAAgB;YAChB,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,mEAAY;SACb;mIASU,SAAS,mBAvBlB,2DAAY;QACZ,0GAAqB;QACrB,mHAAwB,wiBAExB,0FAAe;QACf,2FAAe,aAGf,uEAAa;QACb,qEAAgB;QAChB,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;QACnB,mEAAY;6FAUH,SAAS;cAzBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,0GAAqB;oBACrB,mHAAwB;oBACxB,qEAAiB;oBACjB,0FAAe;oBACf,2FAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;oBAChB,oEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,mEAAY;iBACb;gBACD,SAAS,EAAE,CAAC,qEAAW;oBACX,wEAAY;oBACZ,8DAAS;oBACT,0DAAW;oBACX,8DAA8D;iBAC/D;gBACX,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGkB;;;AAGtD,MAAM,WAAW;IAMtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJ5B,sBAAiB,GAAG,qEAAW,CAAC,MAAM,GAAC,cAAc,CAAC;QACtD,kBAAa,GAAG,qEAAW,CAAC,MAAM,GAAC,eAAe,CAAC;QACnD,oBAAe,GAAG,qEAAW,CAAC,MAAM,GAAC,iCAAiC,CAAC;IAEvC,CAAC;IAEzC,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzD,CAAC;IAED,SAAS,CAAC,OAAe;QACvB,IAAI,cAAc,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,IAAI,CAAC,aAAa,EAAE,EAAC,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,cAAc,EAAC,CAAC,CAAC;IACzG,CAAC;IAED,yBAAyB,CAAC,QAAgB;QACxC,IAAI,cAAc,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,IAAI,CAAC,eAAe,EAAE,EAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAC,CAAC,CAAC;IACxG,CAAC;IAED,OAAO;QACL,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;QACnB,IAAI,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QAC3B,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAC,EAAE,EAAC,CAAC,CAAC,GAAC,EAAE,GAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC,CAAC;QACrE,IAAI,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,GAAC,EAAE,EAAC,CAAC,CAAC,GAAC,EAAE,GAAC,CAAC,CAAC,OAAO,EAAE,EAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACzD,IAAI,IAAI,GAAG,CAAC,CAAC,kBAAkB,EAAE,CAAC;QAClC,OAAO,IAAI,GAAC,GAAG,GAAC,KAAK,GAAC,GAAG,GAAC,IAAI,GAAC,GAAG,GAAC,IAAI,CAAC;IAC5C,CAAC;;sEA7BY,WAAW;8FAAX,WAAW,WAAX,WAAW;6FAAX,WAAW;cADvB,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAA0G;;;AAUnG,MAAM,wBAAwB;IAUjC;QAJA,YAAO,GAAG,EAAE,CAAC;QAEH,sBAAiB,GAAG,IAAI,0DAAY,EAAU,CAAC;IAEzC,CAAC;IACjB,yFAAyF;IACzF,QAAQ;QACJ,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;QACjC,IAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,GAAC,EAAE;YAClC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAC,IAAI,GAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;;YAEpF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAC,GAAG,GAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;IAC3F,CAAC;IAED,eAAe;QACX,2CAA2C;QAC3C,+FAA+F;QAC/F,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IAExD,CAAC;IAED,gBAAgB,CAAC,KAAK;QAClB,0CAA0C;QAC1C,sCAAsC;QACtC,IAAG,KAAK,CAAC,MAAM,CAAC,SAAS,KAAK,QAAQ;YAClC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACrD,CAAC;;gGAhCQ,wBAAwB;wGAAxB,wBAAwB;;;;;;QCVrC,4EACI;QAD6C,mJAAS,4BAAwB,IAAC;QAE/E,yEACI;QAAA,qEAAwC;QACxC,0EAAuB;QAAA,sEAAK;QAAA,uDAAa;QAAA,4DAAM;QAAA,4DAAO;QAC1D,4DAAM;QACV,4DAAM;;QAHQ,0DAA0B;QAA1B,mJAA0B;QACJ,0DAAa;QAAb,4EAAa;;6FDMpC,wBAAwB;cAPpC,uDAAS;eAAC;gBACP,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;gBAChD,sEAAsE;gBACtE,aAAa,EAAE,+DAAiB,CAAC,SAAS;aAC7C;sCAGiC,eAAe;kBAA5C,uDAAS;mBAAC,iBAAiB;YAMlB,iBAAiB;kBAA1B,oDAAM;;;;;;;;;;;;;;AEjBX;AAAA;AAAA;AAAA;AAAyD;;;AAIlD,MAAM,WAAW;IAWpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QATpC,qDAAqD;QAC7C,aAAQ,GAAG,KAAK,CAAC;QAEzB,iBAAiB;QACjB,mBAAmB;QAEnB,kBAAa,GAAG,IAAK,0DAAY,EAAgB,CAAC;QAClD,mBAAc,GAAG,IAAI,0DAAY,EAAQ,CAAC;IAEF,CAAC;IAEzC,eAAe;QACX,MAAM,OAAO,GAAG,IAAI,OAAO,CACvB,CAAC,OAAO,EAAE,MAAM,EAAC,EAAE;YACf,cAAc;YACd,mBAAmB;YACnB,+CAA+C;YAC/C,8BAA8B;YAC9B,WAAW;YAEX,wDAAwD;YACxD,wFAAwF;YACxF,wBAAwB;YACxB,gHAAgH;YAChH,uCAAuC;YACvC,qCAAqC;YACrC,KAAK;YACL,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,iBAAiB,CAAC,WAAoB;QAClC,2CAA2C;QAC3C,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;IAChC,CAAC;IACD,iBAAiB;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;;sEAxCQ,WAAW;8FAAX,WAAW,WAAX,WAAW;6FAAX,WAAW;cADvB,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACe;AACP;;;;;;;ICejD,4EAAgF;IAAA,6EAAkB;IAAA,4DAAQ;;;IAC1G,4EAAiF;IAAA,mGAAwC;IAAA,4DAAQ;;;IACjI,4EAAiF;IAAA,uGAA4C;IAAA,4DAAQ;;;IACrI,4EAA+E;IAAA,+FAAoC;IAAA,4DAAQ;;;IAL7H,sEAEE;IAAA,6HAA0G;IAC1G,6HAAiI;IACjI,6HAAqI;IACrI,6HAA2H;IAC7H,4DAAM;;;IAJI,0DAAkD;IAAlD,qHAAkD;IAClD,0DAAmD;IAAnD,sHAAmD;IACnD,0DAAmD;IAAnD,sHAAmD;IACnD,0DAAiD;IAAjD,oHAAiD;;;IAQzD,4EAAiF;IAAA,8EAAmB;IAAA,4DAAQ;;;IAC5G,4EAAgF;IAAA,yEAAc;IAAA,4DAAQ;;;IAHxG,sEAEE;IAAA,6HAA4G;IAC5G,6HAAsG;IACxG,4DAAM;;;IAFI,0DAAmD;IAAnD,sHAAmD;IACnD,0DAAkD;IAAlD,qHAAkD;;;IAO1D,4EAAoF;IAAA,iFAAsB;IAAA,4DAAQ;;;IAClH,4EAAqF;IAAA,qGAA0C;IAAA,4DAAQ;;;IACvI,4EAAmF;IAAA,yHAA8D;IAAA,4DAAQ;;;IAH3J,sEACE;IAAA,6HAAkH;IAClH,6HAAuI;IACvI,6HAAyJ;IAC3J,4DAAM;;;IAHI,0DAAsD;IAAtD,yHAAsD;IACtD,0DAAuD;IAAvD,0HAAuD;IACvD,0DAAqD;IAArD,wHAAqD;;;IAQ7D,4EAA4F;IAAA,yFAA8B;IAAA,4DAAQ;;;IAClI,4EAA4F;IAAA,gGAAqC;IAAA,4DAAQ;;;IAH3I,sEAEE;IAAA,6HAAkI;IAClI,6HAAyI;IAC3I,4DAAM;;;IAFI,0DAA8D;IAA9D,iIAA8D;IAC9D,0DAA8D;IAA9D,iIAA8D;;;IAI5E,4EAAkD;IAAA,sFAA2B;IAAA,4DAAQ;;;IACrF,4EAA+E;IAAA,mGAAwC;IAAA,4DAAQ;;;IAC/H,4EAA6G;IAAA,qHAA0D;IAAA,4DAAQ;;AD1C9K,MAAM,qBAAqB;IAE9B,YAAqB,mBAAuC;QAAvC,wBAAmB,GAAnB,mBAAmB,CAAoB;QAE5D,mBAAc,GAAG,KAAK,CAAC;QACvB,oBAAe,GAAG,KAAK,CAAC;QACxB,2BAAsB,GAAG,KAAK,CAAC;QAG/B,qBAAgB,GAAG,IAAI,wDAAS,CAAC;YAC7B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;YACnI,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC5F,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAE;YACvI,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;SACjJ,CAAC,CAAE;IAZ4D,CAAC;IAajE,UAAU;QACN,IAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAC;YAC3B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACtC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBACvG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAG,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,EAAC;oBACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;iBACvC;qBACG;oBACA,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;oBACnC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;wBACxB,IAAI,EAAE,EAAE;wBACR,KAAK,EAAE,EAAE;wBACT,QAAQ,EAAE,EAAE;wBACZ,gBAAgB,EAAE,EAAE;qBACvB,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;SACN;aACI;YACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;SACvC;IACL,CAAC;IAED,WAAW;QACP,IAAG,IAAI,CAAC,eAAe,EAAE;YACrB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SACtC;IACL,CAAC;;0FA/CQ,qBAAqB;qGAArB,qBAAqB,6GAFnB,CAAC,yEAAmB,CAAC;QCTpC,yEACE;QAAA,yEAAmB;QAAA,uEAAY;QAAA,4DAAM;QACrC,yEACE;QAAA,0EACE;QADmC,iJAAY,gBAAY,IAAC;QAO5D,yEACE;QAAA,yEAEE;QAAA,0EAAsB;QAAA,mEAAQ;QAAA,4DAAO;QACrC,sEACA;QAAA,mHAMM;QACR,4DAAM;QAAA,iEACN;QAAA,0EACE;QAAA,2EAAsB;QAAA,oEAAQ;QAAA,4DAAO;QACrC,wEACA;QAAA,mHAIM;QACR,4DAAM;QAAA,iEACN;QAAA,0EACE;QAAA,2EAAsB;QAAA,oEAAQ;QAAA,4DAAO;QACrC,6EACA;QADgG,6IAAS,yBAAqB,kBAAkB,CAAC,yBAAyB,IAAC;QAA3K,4DACA;QAAA,mHAIM;QACR,4DAAM;QAAA,iEACN;QAAA,0EACE;QAAA,2EAAsB;QAAA,4EAAgB;QAAA,4DAAO;QAC7C,wEACA;QAAA,mHAIM;QACR,4DAAM;QAAA,iEACR;QAAA,4DAAM;QACN,wHAAqF;QACrF,wHAA+H;QAC/H,wHAA+K;QAC/K,2EACE;QAAA,wEACF;QAAA,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;;QAxDI,0DAA8B;QAA9B,2FAA8B;QAYxB,0DAAkF;QAAlF,sJAAkF;QAWlF,0DAAoF;QAApF,wJAAoF;QASpF,0DAA0F;QAA1F,8JAA0F;QAS1F,0DAA0G;QAA1G,8KAA0G;QAOxF,0DAAoB;QAApB,oFAAoB;QACpB,0DAAiD;QAAjD,qHAAiD;QAChD,0DAA8E;QAA9E,sJAA8E;;6FD1CpG,qBAAqB;cANjC,uDAAS;eAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;gBAC3C,SAAS,EAAE,CAAC,yEAAmB,CAAC;aACnC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;;;ICgB7C,wEAAkI;IAA1D,kTAAwB;IAAkC,wEAAsB;IAAA,kEAAO;IAAA,4DAAI;IAAA,4DAAK;;IAA1I,0JAAyC;;;;IACvE,wEAAiI;IAAzD,kTAAwB;IAAiC,wEAAuB;IAAA,oEAAS;IAAA,4DAAI;IAAA,4DAAK;;IAA5I,0JAAyC;;;;IAK3E,yEACI;IACA,wEAAgG;IAAzB,kTAAwB;IAAC,wEAA8B;IAAA,iEAAM;IAAA,4DAAI;IAAA,4DAAK;IACjJ,4DAAK;;IAD6B,0DAAwC;IAAxC,0JAAwC;;;;IAE1E,yEACI;IAAA,yEAAwB;IAAA,uDAAsB;IAAA,4DAAK;IACnD,qEAAI;IAAA,wEAAwC;IAArB,gTAAoB;IAAC,iEAAM;IAAA,4DAAI;IAAA,4DAAK;IAC/D,4DAAK;;;IAFuB,0DAAsB;IAAtB,iGAAsB;;;ADhBvD,MAAM,eAAe;IAQxB,YAAoB,WAAwB,EACxB,MAAc,EACd,YAA0B;QAF1B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAT9C,aAAQ,GAAG,EAAE,CAAC;QACd,iBAAY,GAAG,KAAK,CAAC;QACrB,YAAO,GAAG,KAAK,CAAC;QAGhB,0BAAqB,GAAG,KAAK,CAAC;IAIoB,CAAC;IAEnD,QAAQ;QACJ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChE,oBAAoB;YACpB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;YAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,2CAA2C;QAC/C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,EAAE;YACjE,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,qBAAqB,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC;QACzD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YACjG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAG,GAAG,CAAC,cAAc,CAAC,EAAC;gBACnB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;aAC1C;QACL,CAAC,CAAC;IACN,CAAC;IACD,YAAY;QACR,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,IAAI,CAAC,qBAAqB,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC;IAC7D,CAAC;IACD,WAAW;QACP,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;;8EA1CQ,eAAe;+FAAf,eAAe;QCX5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,4EAII;QAFI,uIAAS,kBAAc,IAAC;QAE5B,qEAA8B;QAC9B,qEAA8B;QAC9B,qEAA8B;QAClC,4DAAS;QACT,uEAAuC;QAAA,oFAAyB;QAAA,4DAAI;QACxE,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEAAiG;QAAzB,oIAAS,kBAAc,IAAC;QAAC,wEAAuB;QAAA,gEAAI;QAAA,4DAAI;QAAA,4DAAK;QACrI,4GAAwK;QACxK,4GAA0K;QAC1K,0EAAuD;QAAzB,oIAAS,kBAAc,IAAC;QAAC,yEAAyB;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAK;QAChG,0EAAuD;QAAzB,oIAAS,kBAAc,IAAC;QAAC,yEAAuB;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QAC/F,0EAAuD;QAAzB,oIAAS,kBAAc,IAAC;QAAC,yEAA0B;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QACtG,4DAAK;QACL,4GAGK;QACL,4GAGK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAnBsD,0DAAyC;QAAzC,qKAAyC;QAEvD,0DAAyC;QAAzC,0JAAyC;QAC2B,0DAA8B;QAA9B,kGAA8B;QAC9B,0DAA6B;QAA7B,iGAA6B;QAK1F,2DAAmB;QAAnB,mFAAmB;QAInB,0DAAkB;QAAlB,kFAAkB;;6FDf1D,eAAe;cAL3B,uDAAS;eAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAA0C;;AAQnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCRzB,qEAAI;QAAA,sGAA2C;QAAA,4DAAK;;6FDQvC,YAAY;cANxB,uDAAS;eAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAE9C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAA0C;;AAOnC,MAAM,iBAAiB;;kFAAjB,iBAAiB;iGAAjB,iBAAiB;QCP9B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,wEAAoB;QAAA,qEAAkD;QAAC,kEAAM;QAAA,4DAAK;QAClF,uEAA0B;QAAA,wEAAa;QAAA,4DAAI;QAC3C,iEACA;QAAA,yEAAoB;QAAA,sEAAkD;QAAC,sEAAS;QAAA,4DAAK;QACrF,wEAA0B;QAAA,sEAAU;QAAA,4DAAI;QACxC,iEACA;QAAA,yEAAoB;QAAA,sEAAgD;QAAC,2EAAc;QAAA,4DAAK;QACxF,wEAA0B;QAAA,oFAAwB;QAAA,4DAAI;QAC1D,4DAAM;QACV,4DAAM;QACV,4DAAM;;6FDTO,iBAAiB;cAL7B,uDAAS;eAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEN;AACyB;AACX;AACqB;AACD;AACC;AACZ;AACmB;;;AAE3F,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oFAAa;KACzB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,oFAAa;KACzB;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,2EAAc;KAC1B;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,gGAAqB;KACjC;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,sFAAmB;KAC/B;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,+FAAgB;KAC5B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,gGAAiB;KAC7B;IACD;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,GAAG,EAAE,CAAC,mJAA4B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;QACxE,WAAW,EAAE,CAAC,6DAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,GAAG,EAAE,CAAC,yJAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;QAC3E,WAAW,EAAE,CAAC,6DAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,uGAAY;KACxB;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;AAEM,MAAM,iBAAiB,GAAG;IACC,2EAAc;IACd,gGAAqB;IACrB,sFAAmB;IACnB,oFAAa;IACb,gGAAiB;IACjB,+FAAgB;CACjB,CAAC;;;;;;;;;;;;;ACrElC;AAAA;AAAA;AAA0C;;AAOnC,MAAM,eAAe;;8EAAf,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,yEACI;QAAA,oEAAG;QAAA,2GAA2C;QAAA,4DAAI;QACtD,4DAAM;QACV,4DAAS;;6FDGI,eAAe;cAL3B,uDAAS;eAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC;;;;;;;;;;;;ACZA;AAAA;AAAA;AAA0C;;AAOnC,MAAM,uBAAuB;;8FAAvB,uBAAuB;uGAAvB,uBAAuB;QAHrB,yEAAsB;QAAA,iEAAW;QAAA,iEAAW;QAAA,iEAAW;QAAA,4DAAM;;6FAG/D,uBAAuB;cALnC,uDAAS;eAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,QAAQ,EAAE,+DAA+D;gBACzE,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC/C","file":"main.js","sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AuthService } from \"src/app/auth-service\";\r\nimport { LoginService } from \"./login.service\";\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css'],\r\n\r\n})\r\nexport class LoginComponent  implements OnInit{\r\n    @ViewChild('loginForm') loginForm: NgForm\r\n    invalidUserCredentials = false;\r\n    userType = \"\";\r\n    invalidBtnPress = false;\r\n\r\n    constructor(private loginService: LoginService,\r\n                private router: Router,\r\n                private authService: AuthService,\r\n                private route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        this.userType = this.route.snapshot.queryParams[\"userType\"];\r\n        // console.log(this.userType);\r\n        // console.log(this.route);\r\n        this.route.queryParams.subscribe(queryParams=> {\r\n            // console.log(\"*\");\r\n            this.userType = queryParams[\"userType\"];\r\n        })\r\n    }\r\n    \r\n    onLogin() {\r\n        if(this.loginForm.valid){\r\n            this.invalidBtnPress = false;\r\n            console.log(this.loginForm.form.value);\r\n       \r\n            //Code to set the default user type as 'user'\r\n            if(this.userType !== 'user' && this.userType !== 'admin'){\r\n                // console.log(\"true\");\r\n                this.loginForm.form.value[\"userType\"] = \"user\";\r\n            }\r\n            else{\r\n                this.loginForm.form.value[\"userType\"] = this.userType;\r\n            }\r\n                \r\n            this.loginService.login(this.loginForm.form.value).subscribe(data => {\r\n                console.log(data);\r\n                this.loginService.setLoggedInUser(data[\"loggedInUser\"]);\r\n                if(data[\"loggedInUser\"][\"userName\"] === \"-1\" || data[\"loggedInUser\"][\"userName\"] === \"0\"){\r\n                    this.invalidUserCredentials = true;\r\n                    console.log(\"Invalid user credentials: \"+this.invalidUserCredentials);\r\n                }\r\n                else{                    \r\n                        console.log(\"User credentials verified\");\r\n                        this.authService.setLoggedInStatus(true);\r\n                        const expiresIn = data[\"loggedInUser\"][\"expiresIn\"];\r\n                        console.log(\"expiresIn: \");\r\n                        console.log(expiresIn);\r\n                        const expirationDate = new Date(new Date().getTime() + expiresIn*1000);\r\n                        console.log(expirationDate);\r\n                        this.loginService.autoLogout(expiresIn*1000);\r\n                        if(data[\"loggedInUser\"][\"isAdmin\"]){\r\n                            this.router.navigate(['/admin']);\r\n                        }\r\n                        else{\r\n                            this.router.navigate(['/user']);\r\n                        }\r\n                }  \r\n            });\r\n        }\r\n        else{\r\n            this.invalidBtnPress = true;\r\n        }\r\n        \r\n    }\r\n}","<!-- {{ loginForm.value | json}}\r\n{{ loginForm.valid }} -->\r\n\r\n<div class=\"wrapper\">\r\n    <div class=\"title\">\r\n        Login Form\r\n    </div>\r\n    <form class=\"grid-container\" #loginForm=\"ngForm\" (ngSubmit)=\"onLogin()\">\r\n        <div class=\"field\">\r\n            <input type=\"text\" #email=\"ngModel\" name=\"email\" pattern=\"^\\w+[@]\\w+[.]com|in$\" required ngModel>\r\n            <label>Email Address</label>\r\n            <div *ngIf=\"email.errors && (email.invalid && email.touched)\">\r\n                <small class=\"text-danger err-msg\" *ngIf=\"email.errors.required\">Email is required</small>\r\n                <small class=\"text-danger err-msg\" *ngIf=\"email.errors.pattern\">Invalid email</small>\r\n            </div>\r\n        </div>\r\n        <div class=\"field\">\r\n            <input type=\"password\" #password=\"ngModel\" name=\"pwd\" autocomplete=\"on\" required ngModel>\r\n            <label>Password</label>\r\n            <small class=\"text-danger err-msg\" *ngIf=\"password.invalid && password.touched\">Password is required</small>\r\n        </div>\r\n        <!-- <div class=\"content\">\r\n            <div class=\"checkbox\">\r\n                <input type=\"checkbox\" id=\"remember-me\" required>\r\n                <label for=\"remember-me\"><h5>I Agree to all Terms and Conditions.</h5></label>\r\n            </div>\r\n            <div class=\"pass-link\">\r\n                <a href=\"Password Error.html\" target= \"new\">Forgot password?</a>\r\n            </div>\r\n        </div> -->\r\n        <div class=\"err-msg\">\r\n            <small class=\"text-danger\" *ngIf=\"invalidBtnPress\">Please fill in the email and password! </small>\r\n            <small class=\"text-danger\" *ngIf=\"invalidUserCredentials && !invalidBtnPress\">Invalid email or password! </small>\r\n        </div>\r\n        <div class=\"field\">\r\n            <input type=\"submit\" value=\"Login\">\r\n        </div>\r\n        <div class=\"signup-link\">\r\n            Not a member ? <a routerLink=\"/registration\">Signup now</a>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/auth-service\";\r\n\r\n@Component({\r\n    selector: \"app-home\",\r\n    templateUrl: \"./home.component.html\",\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n    userLoggedIn = false;\r\n    loginEventSub: Subscription;\r\n    logoutEventSub: Subscription;\r\n    \r\n    constructor(private authService: AuthService) { }\r\n    \r\n    ngOnInit() {\r\n        // console.log(\"Inside home.component.ts ngOnInit\");\r\n        if(this.authService.getLoggedInStatus()){\r\n            this.userLoggedIn = true;\r\n            // console.log(\"userLoggedIn: \"+this.userLoggedIn);\r\n        }\r\n        this.loginEventSub = this.authService.loggedInEvent.subscribe(res => {\r\n            this.userLoggedIn = true;\r\n            // console.log(\"res: \"+res);\r\n        });\r\n        this.logoutEventSub = this.authService.loggedOutEvent.subscribe(()=> {\r\n            this.userLoggedIn = false;\r\n        })\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.loginEventSub.unsubscribe();\r\n        this.logoutEventSub.unsubscribe();\r\n    }\r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n            <div class=\"col-sm-6 home-intro\">\r\n                <h3>Welcome to XYZ Car Insurance Company</h3>\r\n                <hr>\r\n                <p>\r\n                    Is your car insured? If no, then this is the time to ponder over your \r\n                    car & personal safety. \r\n                </p>\r\n                <p>\r\n                    Taking a car insurance can prevent you and and your car against any hefty \r\n                    losses caused by car-accidents & thefts.\r\n                </p>\r\n                <p>\r\n                    If you want to know more about our services, feel free to \r\n                    interact with our <b>Chatbot</b>(link in the navigation bar).\r\n                </p>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <img src=\"/images/car-crash.jpg\" alt=\"Car crash image\" class=\"car-crash-img img-responsive\">\r\n            </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"!userLoggedIn\">\r\n        <div class=\"col-sm-12\">\r\n            <button \r\n                class=\"btn btn-primary\" \r\n                routerLink=\"/login\"\r\n                [queryParams]=\"{userType: 'user'}\"\r\n            >\r\n                Login as a user\r\n            </button>\r\n            <button \r\n                class=\"btn btn-primary\" \r\n                routerLink=\"/login\"\r\n                [queryParams]=\"{userType: 'admin'}\"\r\n            >\r\n                Login as an admin\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"app-about-us\",\r\n    templateUrl: \"./about-us.component.html\",\r\n    styleUrls: ['./about-us.component.css']\r\n})\r\nexport class AboutUsComponent {\r\n\r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-10 col-xs-offset-1 col-sm-4 col-sm-offset-1 card\">\r\n            <!-- <h3>This is the about us page.</h3> -->\r\n            \r\n            <p>Name: Chhitiz Anand</p>\r\n            <hr>\r\n            <p>Employee Id: 1856853</p>\r\n            <hr>\r\n            <p>Technologies known: HTML5, CSS3, JavaScript, Angular, MySQL</p>\r\n            <hr>\r\n            <p>Organization Name: TCS</p>\r\n        </div>\r\n        <div class=\"col-xs-10 col-xs-offset-1 col-sm-4 col-sm-offset-1 card\">\r\n            <!-- <h3>This is the about us page.</h3> -->\r\n            <p>Name: A.Shrikant</p>\r\n            <hr>\r\n            <p>Employee Id: 1856846</p>\r\n            <hr>\r\n            <p>Technologies known: HTML5, CSS3, JavaScript, Angular, MySQL</p>\r\n            <hr>\r\n            <p>Organization Name: TCS</p>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, \r\n         CanActivate, \r\n         CanActivateChild, \r\n         Router, \r\n         RouterStateSnapshot \r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"./auth-service\";\r\nimport { LoginService } from \"./Forms/Login/login.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private authService: AuthService,\r\n                private loginService: LoginService,\r\n                private router: Router) {}\r\n    canActivate(route: ActivatedRouteSnapshot,\r\n                state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        return this.authService.isAuthenticated().then(\r\n            (authenticated: boolean)=>{\r\n                // console.log(\"Inside auth-guard\");\r\n                // console.log(\"authenticated: \"+authenticated);\r\n                if(authenticated) {\r\n                    this.authService.loggedInEvent.emit(this.loginService.getLoggedInUser());\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.router.navigate(['/']);\r\n                }\r\n            }\r\n        )\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: \"http://localhost:3000/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Directive, Input } from \"@angular/core\";\r\nimport { AbstractControl, NG_VALIDATORS, Validator } from \"@angular/forms\";\r\n\r\n@Directive({\r\n    selector: '[appMatchFields]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: AppMatchFields,\r\n        multi: true\r\n    }]   \r\n})\r\nexport class AppMatchFields implements Validator {\r\n    @Input() appMatchFields: string;\r\n    validate(control: AbstractControl): {[key: string]: any} | null {\r\n        const controlToCompare = control.parent.get(this.appMatchFields);\r\n        // console.log('#');\r\n        if(control.value === '' || control.value === controlToCompare.value)\r\n            return null;\r\n        else\r\n            return {'notEqual': true};\r\n    }\r\n}","import { Component, \r\n         ViewChild,\r\n         ComponentFactoryResolver,\r\n         ViewContainerRef,\r\n         ElementRef,\r\n         AfterViewInit,\r\n         OnDestroy\r\n        } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ChatService } from \"./chat.service\";\r\nimport { ChatbotMsgBlockComponent } from \"./chatbot-msg-block/chatbot-msg-block.component\";\r\nimport { UserMsgBlockComponent } from \"./user-msg-block/user-msg-block.component\";\r\n\r\n\r\n@Component({\r\n    selector: \"app-chat-window\",\r\n    templateUrl: \"./chat-window.component.html\",\r\n    styleUrls: ['./chat-window.component.css']\r\n})\r\nexport class ChatWindowComponent implements AfterViewInit, OnDestroy{\r\n\r\n    @ViewChild(\"chatMsgRef\", { read: ViewContainerRef, static: false }) target: ViewContainerRef;\r\n    @ViewChild(\"userMsgRef\") userMsgRef: ElementRef;\r\n\r\n    chatResponse:string[] = [];\r\n\r\n    postChatsSub: Subscription;\r\n    getResponseForTopicsChosenSub: Subscription;\r\n\r\n    //This chatResponse array is used to store the chatbot's responses.\r\n    // chatResponse = [\"<div>Hello user, how can I help you?<div>\", \"I am Eri a car insurance chatbot.\", \"I can tell you about car insurance.\"];\r\n\r\n    //This chatResponse array is for test purpose.\r\n    //chatResponse = [\"<div>Hello user, how can I help you?<div>\", \"I am Eri a car insurance chatbot.\", \"I can tell you about car insurance.\"];\r\n\r\n\r\n    constructor(private _chatService: ChatService, \r\n                private componentFactoryResolver: ComponentFactoryResolver,\r\n                private sanitizer: DomSanitizer\r\n    ) { }\r\n\r\n    onAsk(userMsg: HTMLInputElement){\r\n         //This will return the userMsg input element.\r\n        //console.log(userMsg);\r\n        \r\n        //This will return the userMsg input element's value.\r\n        console.log(userMsg.value);\r\n        this.createUserMsgBlockComponent(userMsg.value);\r\n        \r\n        //This will return the latest 10 chats from the database.\r\n        //this._chatService.getChats().subscribe(data => {this.chatData = data; console.log(this.chatData)});\r\n        \r\n        //This will post the user chat message to the database and get back the correct reponse.\r\n        this.postChatsSub = this._chatService.postChats(userMsg.value).subscribe(data => {\r\n            this.chatResponse = data; \r\n            console.log(this.chatResponse);\r\n            console.log(\"Chatbot response received successfully!\");\r\n            this.generateChatbotResponse();\r\n        });\r\n\r\n        this.userMsgRef.nativeElement.value = \"\";\r\n        \r\n        //Testing the chatbot-msg-block component here with dummy message.\r\n        //this.createChatbotMsgBlockComponent(\"<b>Welcome user how can I help you.</b>\");\r\n        \r\n    }\r\n\r\n    generateChatbotResponse() {\r\n        this.chatResponse.forEach((response,i) => {\r\n            setTimeout(()=>{\r\n                i++;\r\n                // console.log(\"Response: \"+i);\r\n                // console.log(response);\r\n                this.createChatbotMsgBlockComponent(response);\r\n                // this.createChatbotMsgBlockComponent2(response);\r\n            }, 500*i);\r\n        });\r\n       \r\n    }\r\n\r\n    createUserMsgBlockComponent(message) {\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(\r\n            UserMsgBlockComponent\r\n        );\r\n        const componentRef = this.target.createComponent(factory);\r\n        componentRef.instance.userMsg = message;\r\n    }\r\n\r\n    createChatbotMsgBlockComponent(message) {\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(\r\n            ChatbotMsgBlockComponent\r\n        );\r\n        const componentRef = this.target.createComponent(factory);\r\n        componentRef.instance.chatbotMsg= this.sanitizer.bypassSecurityTrustHtml(message);\r\n        componentRef.instance.optionWasSelected.subscribe(event=>this.onOptionWasSelected(event));\r\n    }\r\n\r\n    onOptionWasSelected(id){\r\n        // console.log(\"Inside onOptionWasSelected\");\r\n        console.log(\"Id of the bot provided option: \"+ id);\r\n        this.getResponseForTopicsChosenSub = this._chatService.getResponseForChosenTopic(id).subscribe(data =>{\r\n            this.chatResponse = data; \r\n            console.log(this.chatResponse);\r\n            // console.log(\"Chatbot response for selected option received successfully!\");\r\n            this.generateChatbotResponse();\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(){\r\n        setTimeout(()=>this.onOptionWasSelected(\"intro\"), 1000);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        //Cleaning up the subscriptions\r\n        if(this.postChatsSub) {\r\n            this.postChatsSub.unsubscribe();\r\n        }\r\n        if(this.getResponseForTopicsChosenSub) {\r\n            this.getResponseForTopicsChosenSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-8 col-sm-offset-2\">\r\n            <div id=\"chat-window\">\r\n                <div id=\"chat-screen\">\r\n                    <ng-template #chatMsgRef></ng-template>     \r\n                </div>\r\n                <div id=\"chat-console\">\r\n                    <div id=\"chat-field\">\r\n                        <textarea  #userMsgRef id=\"user-msg\" name=\"user-msg\" value=\"\" style=\"width:100%; margin:2px; padding:5px; resize:none\"></textarea> \r\n                    </div>\r\n                    <div id=\"ask-btn\"><button type=\"button\" class=\"btn btn-primary\" (click)=\"onAsk(userMsgRef)\">Ask</button></div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class RegistrationService {\r\n\r\n    private _registerUserApi = \"http://localhost:3000/user/register\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    registerUser(user: any): Observable<string> {\r\n        console.log(\"Inside RegistrationService\");\r\n        //console.log(user);\r\n        return this.http.post<string>(this._registerUserApi, {userData: user});\r\n    }\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { LoadingSpinnerComponent } from \"./loading-spinner/loading-spinner.component\";\r\nimport { AppMatchFields } from \"./matchFields.directive\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppMatchFields,\r\n        LoadingSpinnerComponent\r\n    ],\r\n    imports: [CommonModule],\r\n    exports: [\r\n        AppMatchFields,\r\n        LoadingSpinnerComponent\r\n    ]\r\n})\r\nexport class SharedModule {\r\n\r\n}","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'app-user-msg-block',\r\n    templateUrl: './user-msg-block.component.html',\r\n    styleUrls: ['./user-msg-block.component.css']\r\n})\r\nexport class UserMsgBlockComponent {\r\n\r\n    userMsg = \"\";\r\n    userMsgTime: Date;\r\n    msgTime = \"\";\r\n\r\n    constructor() { }\r\n\r\n    //This hook method will be fired after user-msg-block.component's instance is created.\r\n    ngOnInit(): void {\r\n        this.userMsgTime = new Date();\r\n        if(this.userMsgTime.getMinutes()<10)\r\n            this.msgTime = this.userMsgTime.getHours()+\":0\"+this.userMsgTime.getMinutes();\r\n        else\r\n            this.msgTime = this.userMsgTime.getHours()+\":\"+this.userMsgTime.getMinutes();\r\n    }\r\n\r\n}","<div class=\"user-msg-block\">\r\n    <div class=\"user-msg-text\">\r\n        {{ userMsg }}<span class=\"msg-time\"><sub>{{ msgTime }}</sub></span>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth-service';\nimport { LoginService } from './Forms/Login/login.service';\nimport { LoggedInUser } from './loggedInUser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  constructor(private loginService: LoginService,\n              private authService: AuthService\n            ) { }  \n  \n  ngOnInit() {\n    console.log(\"Inside app.component.ts ngOnInit\");\n    // console.log(this.loginService.getLoggedInUser());\n    console.log(this.loginService.getLoggedInUser());\n    this.loginService.verifyToken(this.loginService.getLoggedInUser()).subscribe((res: LoggedInUser)=>{\n      console.log(\"Got token verification response\");\n      console.log(res);\n      if(res[\"tokenValidity\"]){\n        // console.log(\"loggedIn set\");\n        this.loginService.setLoggedInUser(res);\n        this.loginService.autoLogout(res[\"expiresIn\"]*1000);\n        this.authService.setLoggedInStatus(true);\n        this.authService.loggedInEvent.emit(res);\n      }\n    })\n  }\n}\n","<app-header></app-header>\r\n<!-- <app-navbar></app-navbar> -->\r\n  \r\n<router-outlet></router-outlet>\r\n\r\n<app-footer></app-footer>","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, tap } from \"rxjs/operators\";\r\nimport { AuthService } from \"src/app/auth-service\";\r\nimport { LoggedInUser } from \"src/app/loggedInUser\";\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n    \r\n    private _loginApi = environment.apiURL+\"user/login\";\r\n    private _logoutApi = environment.apiURL+\"user/logout\";\r\n    private _tokenVerifyApi = environment.apiURL+\"user/token\";\r\n\r\n    // private loggedInUser: object;\r\n\r\n    private loggedInUser: LoggedInUser;\r\n\r\n    constructor(private http: HttpClient,\r\n                private authService: AuthService) { }\r\n\r\n    login(userCredentials): Observable<object> {\r\n        // console.log(\"Inside login service\");\r\n        return this.http.post<object>(this._loginApi, {userCredentials: userCredentials})\r\n        .pipe(catchError((errorRes: HttpErrorResponse)=> {\r\n                return throwError(errorRes)\r\n            }),\r\n            //     tap(resData=> {\r\n            //         const expiresIn = +resData[\"loggedInUser\"][\"expiresIn\"];\r\n            //         console.log(\"expiresIn: \"+expiresIn);\r\n            //         const expirationDate = new Date(new Date().getTime() + expiresIn*1000);\r\n            //         console.log(expirationDate);\r\n            //         this.autoLogout(expiresIn*1000);\r\n            //     })\r\n        );\r\n    }\r\n\r\n    logout(loggedInUser: LoggedInUser): Observable<object> {\r\n        console.log(\"Inside logout service\");\r\n        console.log(loggedInUser);\r\n        return this.http.post<object>(this._logoutApi, {loggedInUser: loggedInUser});\r\n    }\r\n\r\n    autoLogout(expirationDuration) {\r\n        setTimeout(()=> {\r\n            this.authService.loggedOutEvent.emit();\r\n            console.log(\"User logged out!\");\r\n        }, expirationDuration);\r\n    }\r\n\r\n    verifyToken(loggedInUser: any): Observable<object> {\r\n        // console.log(\"Inside verifyToken service\");\r\n        // console.log(loggedInUser);\r\n        return this.http.post<object>(this._tokenVerifyApi, {loggedInUser: loggedInUser});\r\n    }\r\n\r\n    getLoggedInUser() {\r\n        return this.loggedInUser;\r\n    }\r\n\r\n    setLoggedInUser(loggedInUser: LoggedInUser) {\r\n        this.loggedInUser = loggedInUser;\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\n\nimport { UserMsgBlockComponent } from './chat-window/user-msg-block/user-msg-block.component';\nimport { ChatbotMsgBlockComponent } from './chat-window/chatbot-msg-block/chatbot-msg-block.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChatService } from './chat-window/chat.service';\nimport { HeaderComponent } from './static-components/header/header.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginService } from './Forms/Login/login.service';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth-service';\nimport { FooterComponent } from './static-components/footer/footer.component';\nimport { SharedModule } from './shared/shared.module';\n// import { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserMsgBlockComponent,\n    ChatbotMsgBlockComponent,\n    routingComponents,\n    HeaderComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  providers: [ChatService, \n              LoginService, \n              AuthGuard, \n              AuthService\n              // {provide: LocationStrategy, useClass: HashLocationStrategy}\n            ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from \"../../environments/environment\"; \n\n@Injectable()\nexport class ChatService {\n\n  private _chatsRetreiveApi = environment.apiURL+\"chat/getChat\";\n  private _chatsPostApi = environment.apiURL+\"chat/postChat\";\n  private _getResponseApi = environment.apiURL+\"chat/getResponseForTopicsChosen\";\n\n  constructor(private http: HttpClient) { }\n\n  getChats(): Observable<string[]>{\n    return this.http.get<string[]>(this._chatsRetreiveApi);\n  }\n\n  postChats(chatMsg: string): Observable<string[]>{\n    let chatDateString = this.getDate();\n    return this.http.post<string[]>(this._chatsPostApi, {\"user-msg\": chatMsg, \"chatDate\": chatDateString});\n  }\n\n  getResponseForChosenTopic(optionId: string): Observable<string[]> {\n    let chatDateString = this.getDate();\n    return this.http.post<string[]>(this._getResponseApi, {\"need\": optionId, \"chatDate\": chatDateString});\n  }\n\n  getDate() {\n    var x = new Date();\n    var year = x.getFullYear();\n    var month = x.getMonth()<10? 0+\"\"+(x.getMonth()+1): (x.getMonth()+1);\n    var date = x.getDate()<10? 0+\"\"+x.getDate(): x.getDate();\n    var time = x.toLocaleTimeString();\n    return year+\"-\"+month+\"-\"+date+\" \"+time;\n}\n}\n","import { Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from \"@angular/core\";\r\nimport { SafeHtml } from \"@angular/platform-browser\";\r\n\r\n@Component({\r\n    selector: \"app-chatbot-msg-block\",\r\n    templateUrl: \"./chatbot-msg-block.component.html\",\r\n    styleUrls: [\"./chatbot-msg-block.component.css\"],\r\n    //This will make the #options and .topics styles move to global scope.\r\n    encapsulation: ViewEncapsulation.ShadowDom\r\n})\r\nexport class ChatbotMsgBlockComponent {\r\n\r\n    @ViewChild('chatbotMsgBlock') chatbotMsgBlock: ElementRef;\r\n\r\n    chatbotMsg: SafeHtml;\r\n    chatbotMsgTime: Date;\r\n    msgTime = \"\";\r\n\r\n    @Output() optionWasSelected = new EventEmitter<string>();\r\n\r\n    constructor() { }\r\n    //This hook method will be fired after chatbot-msg-block.component's instance is created.\r\n    ngOnInit(): void {\r\n        this.chatbotMsgTime = new Date();\r\n        if(this.chatbotMsgTime.getMinutes()<10)\r\n            this.msgTime = this.chatbotMsgTime.getHours()+\":0\"+this.chatbotMsgTime.getMinutes();\r\n        else\r\n            this.msgTime = this.chatbotMsgTime.getHours()+\":\"+this.chatbotMsgTime.getMinutes();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // console.log(\"Inside ngAfterViewInit()\");\r\n        //This code will make sure that the latest chatbot message is scrolled automatically into view.\r\n        this.chatbotMsgBlock.nativeElement.scrollIntoView();\r\n        \r\n    }\r\n\r\n    onOptionSelected(event) {\r\n        // console.log(\"Inside onOptionSelected\");\r\n        //console.log(event.target.className);\r\n        if(event.target.className === 'topics')\r\n            this.optionWasSelected.emit(event.target.id);\r\n    }\r\n\r\n\r\n}","<div class=\"chatbot-msg-block\" #chatbotMsgBlock  (click)=\"onOptionSelected($event)\">\r\n    <!-- Note: property binding with innerHtml has been used to make sure that any html tags in the chatbot's message have their repective effects. -->\r\n    <div class=\"chatbot-msg-text\">\r\n        <span [innerHtml] = \"chatbotMsg\"></span>\r\n        <span class=\"msg-time\"><sub>{{ msgTime }}</sub></span>\r\n    </div>\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { LoggedInUser } from \"./loggedInUser\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    //This loggedIn property is just for testing purpose.\r\n    private loggedIn = false;\r\n\r\n    // userName = \"\";\r\n    // isAdmin = false;\r\n\r\n    loggedInEvent = new  EventEmitter<LoggedInUser>();\r\n    loggedOutEvent = new EventEmitter<void>();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    isAuthenticated() {\r\n        const promise = new Promise(\r\n            (resolve, reject)=>{\r\n                //Dummy delay.\r\n                // setTimeout(()=>{\r\n                //     console.log(\"loggedIn: \"+this.loggedIn);\r\n                //     resolve(this.loggedIn);\r\n                // },1000);\r\n\r\n                //Verifying the token with every erequest to this route.\r\n                // this.loginService.verifyToken(this.loginService.getLoggedInUser()).subscribe((res)=>{\r\n                //     console.log(res);\r\n                //     //Setting the username here is important incase the user refreshes the page from paths other than /user. \r\n                //     this.userName = res[\"userName\"];\r\n                //     resolve(res[\"tokenValidity\"]);\r\n                // })\r\n                resolve(this.getLoggedInStatus());\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    setLoggedInStatus(loginStatus: boolean) {\r\n        // console.log(\"Inside setLoggedInStatus\");\r\n        this.loggedIn = loginStatus; \r\n    }\r\n    getLoggedInStatus(){\r\n        return this.loggedIn;\r\n    }\r\n}","import { Component, OnDestroy } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { RegistrationService } from \"./registration.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './registration.component.html',\r\n    styleUrls: ['./registration.component.css'],\r\n    providers: [RegistrationService]\r\n})\r\nexport class RegistrationComponent implements OnDestroy {\r\n\r\n    constructor (private registrationService:RegistrationService) { }\r\n                \r\n    duplicateEmail = false;\r\n    invalidBtnPress = false;\r\n    registrationSuccessful = false;\r\n    registerUserSub: Subscription;\r\n\r\n    registrationForm = new FormGroup({\r\n        name: new FormControl(\"\",[Validators.required, Validators.minLength(3), Validators.maxLength(30), Validators.pattern(\"[a-zA-Z]*\")]),\r\n        email: new FormControl(\"\",[Validators.required, Validators.pattern(/^\\w+[@]\\w+[.]com|in$/)]),\r\n        password: new FormControl(\"\", [Validators.required, Validators.minLength(6) || Validators.maxLength(15), Validators.pattern(/^\\w*$/)],),\r\n        confirm_password: new FormControl(\"\", [Validators.required, Validators.minLength(6) || Validators.maxLength(15), Validators.pattern(/^\\w*$/)])\r\n    }) ;\r\n    onRegister() {\r\n        if(this.registrationForm.valid){\r\n            this.invalidBtnPress = false;\r\n            console.log(\"Registeration occurred\");\r\n            this.registerUserSub = this.registrationService.registerUser(this.registrationForm.value).subscribe((res)=>{\r\n                console.log(res);\r\n                if(res[\"msg\"] === \"\"){\r\n                    this.duplicateEmail = true;\r\n                    this.registrationSuccessful = false;\r\n                }\r\n                else{\r\n                    this.registrationSuccessful = true;\r\n                    this.duplicateEmail = false;\r\n                    this.registrationForm.reset({\r\n                        name: '',\r\n                        email: '',\r\n                        password: '',\r\n                        confirm_password: ''\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.invalidBtnPress = true;\r\n            this.registrationSuccessful = false;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if(this.registerUserSub) {\r\n            this.registerUserSub.unsubscribe();\r\n        }\r\n    }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"title\">Registration</div>\r\n  <div class=\"content\">\r\n    <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onRegister()\">\r\n      <!-- {{ registrationForm.valid  }}\r\n      {{ registrationForm.get('name').valid }}\r\n      {{ registrationForm.get('email').valid }}\r\n      {{ registrationForm.get('password').valid }}\r\n      {{ registrationForm.get('confirm_password').valid }}\r\n      {{ registrationForm.touched  }} -->\r\n      <div class=\"user-details\">\r\n        <div class=\"input-box has-error\" \r\n        >\r\n          <span class=\"details\">Username</span>\r\n          <input type=\"text\" placeholder=\"Enter your username\" formControlName=\"name\" autocomplete=\"on\">\r\n          <div *ngIf=\"registrationForm.get('name').invalid && registrationForm.get('name').touched\"\r\n          >\r\n            <small *ngIf=\"registrationForm.get('name').errors.required\" class=\"text-danger\">Name is required. </small>\r\n            <small *ngIf=\"registrationForm.get('name').errors.minlength\" class=\"text-danger\">Name must be atleast 3 characters long. </small>\r\n            <small *ngIf=\"registrationForm.get('name').errors.maxlength\" class=\"text-danger\">Name can't be more than 30 characters long. </small>\r\n            <small *ngIf=\"registrationForm.get('name').errors.pattern\" class=\"text-danger\">Name can contain only the alphabets.</small>\r\n          </div>\r\n        </div><br>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">Email Id</span>\r\n          <input type=\"text\" placeholder=\"Enter your email\" formControlName=\"email\">\r\n          <div *ngIf=\"registrationForm.get('email').invalid && registrationForm.get('email').touched\"\r\n          >\r\n            <small *ngIf=\"registrationForm.get('email').errors.required\" class=\"text-danger\">Email is required. </small>\r\n            <small *ngIf=\"registrationForm.get('email').errors.pattern\" class=\"text-danger\">Invalid email.</small>\r\n          </div>\r\n        </div><br>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">Password</span>\r\n          <input type=\"text\" placeholder=\"Enter your password\" name=\"password\" formControlName=\"password\" (input)=\"registrationForm.get('confirm_password').updateValueAndValidity()\">\r\n          <div *ngIf=\"registrationForm.get('password').invalid && registrationForm.get('password').touched\">\r\n            <small *ngIf=\"registrationForm.get('password').errors.required\" class=\"text-danger\">Password is required. </small>\r\n            <small *ngIf=\"registrationForm.get('password').errors.minlength\" class=\"text-danger\">Password must be between 6-15 characters. </small>\r\n            <small *ngIf=\"registrationForm.get('password').errors.pattern\" class=\"text-danger\">Password can contain only alphabets, digits and _(underscore).</small>\r\n          </div>\r\n        </div><br>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">Confirm Password</span>\r\n          <input type=\"text\" placeholder=\"Confirm your password\" formControlName=\"confirm_password\" appMatchFields=\"password\">\r\n          <div *ngIf=\"registrationForm.get('confirm_password').invalid && registrationForm.get('confirm_password').touched\"\r\n          >\r\n            <small *ngIf=\"registrationForm.get('confirm_password').errors.required\" class=\"text-danger\">Confirm password is required. </small>\r\n            <small *ngIf=\"registrationForm.get('confirm_password').errors.notEqual\" class=\"text-danger\">Confirm password does match password.</small>\r\n          </div>\r\n        </div><br>\r\n      </div>\r\n      <small class=\"text-danger\" *ngIf=\"duplicateEmail\">This email already exists! </small>\r\n      <small class=\"text-danger\" *ngIf=\"registrationForm.invalid && invalidBtnPress\">Please fill in all the required fields! </small>\r\n      <small class=\"text-success\" *ngIf=\"!invalidBtnPress && registrationSuccessful && registrationForm.untouched\">You have been registered successfully! Now you can login. </small>\r\n      <div class=\"button\">\r\n        <input type=\"submit\" value=\"Register\">\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/auth-service\";\r\nimport { LoginService } from \"src/app/Forms/Login/login.service\";\r\n\r\n@Component({\r\n    selector: \"app-header\",\r\n    templateUrl: \"./header.component.html\",\r\n    styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy{\r\n    userName = \"\";\r\n    userLoggedIn = false;\r\n    isAdmin = false;\r\n    loginEventSub: Subscription;\r\n    logoutEventSub: Subscription;\r\n    isNavbarToBeCollapsed = false;\r\n\r\n    constructor(private authService: AuthService,\r\n                private router: Router,\r\n                private loginService: LoginService) { }\r\n\r\n    ngOnInit() {\r\n        this.loginEventSub = this.authService.loggedInEvent.subscribe(res => {\r\n            // console.log(res);\r\n            this.userName = res['userName'];\r\n            this.isAdmin = res['isAdmin'];\r\n            this.userLoggedIn = true;\r\n            // console.log(\"userName: \"+this.userName);\r\n        });\r\n        this.logoutEventSub = this.authService.loggedOutEvent.subscribe(() => {\r\n            this.authService.setLoggedInStatus(false);\r\n            this.userLoggedIn = false;\r\n            this.router.navigate(['/']);\r\n        });\r\n    }\r\n    onLogout() {\r\n        this.isNavbarToBeCollapsed = !this.isNavbarToBeCollapsed;\r\n        this.logoutEventSub = this.loginService.logout(this.loginService.getLoggedInUser()).subscribe((res)=>{\r\n            console.log(res);\r\n            if(res[\"logoutStatus\"]){\r\n                this.authService.loggedOutEvent.emit();\r\n            }\r\n        })\r\n    }\r\n    toggleNavbar() {\r\n        console.log(\"Inside collapseNavbar\");\r\n        this.isNavbarToBeCollapsed = !this.isNavbarToBeCollapsed;\r\n    }\r\n    ngOnDestroy() {\r\n        this.loginEventSub.unsubscribe();\r\n        this.logoutEventSub.unsubscribe();\r\n    }\r\n}","<nav class=\"navbar navbar-inverse navbar-fixed-top\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n            <button type=\"button\" \r\n                    class=\"navbar-toggle\" \r\n                    (click)=\"toggleNavbar()\"\r\n            >\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n            </button>\r\n            <a routerLink=\"/\" class=\"navbar-brand\">XYZ Car Insurance Company</a>\r\n        </div>\r\n        <div class=\"collapse navbar-collapse\" id=\"myNavbar\" [ngClass]=\"{'in': isNavbarToBeCollapsed}\">\r\n            <ul class=\"nav navbar-nav\">\r\n                <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" (click)=\"toggleNavbar()\"><a routerLink=\"/home\" >Home</a></li>\r\n                <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" (click)=\"toggleNavbar()\" *ngIf=\"userLoggedIn && !isAdmin\"><a routerLink=\"/user\">Welcome</a></li>\r\n                <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" (click)=\"toggleNavbar()\" *ngIf=\"userLoggedIn && isAdmin\"><a routerLink=\"/admin\">Dashboard</a></li>\r\n                <li routerLinkActive=\"active\" (click)=\"toggleNavbar()\"><a routerLink=\"/chatbot\">Chatbot</a></li>\r\n                <li routerLinkActive=\"active\" (click)=\"toggleNavbar()\"><a routerLink=\"/about\">About Us</a></li>\r\n                <li routerLinkActive=\"active\" (click)=\"toggleNavbar()\"><a routerLink=\"/contacts\">Contacts</a></li>\r\n            </ul>\r\n            <ul class=\"nav navbar-nav navbar-right\" *ngIf=\"!userLoggedIn\">\r\n                <!-- <li><a  routerLink=\"/login\">Login</a></li> -->\r\n                <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\" (click)=\"toggleNavbar()\"><a routerLink=\"/registration\">SignUp</a></li>\r\n            </ul>\r\n            <ul class=\"nav navbar-nav navbar-right\" *ngIf=\"userLoggedIn\">\r\n                <li class=\"navbar-text\">Welcome {{ userName }}</li>\r\n                <li><a  class=\"logout\" (click)=\"onLogout()\">Logout</a></li>\r\n            </ul>\r\n        </div> \r\n    </div>\r\n</nav>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'app-page-not-found',\r\n    templateUrl: 'page-not-found.component.html',\r\n    styleUrls: ['page-not-found.component.css']\r\n\r\n})\r\nexport class PageNotFound {\r\n\r\n}","<h3>The page you are looking for was not found!</h3>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"app-contacts\",\r\n    templateUrl: \"./contacts.component.html\",\r\n    styleUrls: ['./contacts.component.css']\r\n})\r\nexport class ContactsComponent {\r\n\r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6\">     \r\n            <img src=\"/images/b.jpg\" alt=\"Image\" class=\"img-responsive\">\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <h3 class=\"heading\"><span class=\"glyphicon glyphicon-envelope\"></span> Email:</h3>\r\n            <p class=\"contact-detail\">xyz@gmail.com</p>\r\n            <hr>\r\n            <h3 class=\"heading\"><span class=\"glyphicon glyphicon-earphone\"></span> Phone No:</h3>\r\n            <p class=\"contact-detail\">1234567890</p>\r\n            <hr>\r\n            <h3 class=\"heading\"><span class=\"glyphicon glyphicon-pencil\"></span> Working hours:</h3>\r\n            <p class=\"contact-detail\">Mon-Fri, 9:00am - 6:00pm</p>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './auth-guard.service';\nimport { ChatWindowComponent } from './chat-window/chat-window.component';\nimport { LoginComponent } from './Forms/Login/login.component';\nimport { RegistrationComponent } from './Forms/Registration/registration.component';\nimport { AboutUsComponent } from './static-components/about-us/about-us.component';\nimport { ContactsComponent } from './static-components/contacts/contacts.component';\nimport { HomeComponent } from './static-components/home/home.component';\nimport { PageNotFound } from './static-components/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'registration',\n    component: RegistrationComponent\n  },\n  {\n    path: 'chatbot',\n    component: ChatWindowComponent\n  },\n  {\n    path: 'about',\n    component: AboutUsComponent\n  },\n  {\n    path: 'contacts',\n    component: ContactsComponent\n  },\n  { \n    path: 'user', \n    loadChildren: () => import('./user/user.module').then(m => m.UserModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'admin',\n    loadChildren: () => import(\"./admin/admin.module\").then(m => m.AdminModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '**',\n    component: PageNotFound\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [\n                                  LoginComponent, \n                                  RegistrationComponent, \n                                  ChatWindowComponent, \n                                  HomeComponent,\n                                  ContactsComponent,\n                                  AboutUsComponent\n                                ];\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: 'footer.component.html',\r\n    styleUrls: ['footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n    \r\n}","<footer>\r\n    <div class=\"bottom\">\r\n        <p>Copyright © 2021-2022. All rights reserved.</p>        \r\n    </div>\r\n</footer>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'app-loading-spinner',\r\n    template: '<div class=\"lds-ring\"><div></div><div></div><div></div></div>',\r\n    styleUrls: ['loading-spinner.component.css']\r\n})\r\nexport class LoadingSpinnerComponent {\r\n\r\n}"],"sourceRoot":"webpack:///"}