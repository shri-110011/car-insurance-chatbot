{"version":3,"sources":["./src/app/user/CarInsuranceDetails/CarInsuranceDetailsTable/carInsuranceDetailsTable.component.ts","./src/app/user/CarInsuranceDetails/CarInsuranceDetailsTable/carInsuranceDetailsTable.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/user/CarInsuranceDetails/carInsuranceDetails.component.ts","./src/app/user/CarInsuranceDetails/carInsuranceDetails.component.html","./src/app/user/user.module.ts","./src/app/user/CarInsuranceClaim/carInsuranceClaim.component.ts","./src/app/user/CarInsuranceClaim/carInsuranceClaim.component.html","./src/app/user/CarInsuranceApplicationSuccessPage/carInsuranceApplicationSuccessPage.component.ts","./src/app/user/CarInsuranceApplicationSuccessPage/carInsuranceApplicationSuccessPage.component.html","./src/app/user/user-routing.module.ts","./src/app/user/CarInsuranceApplicationForm/carInsuranceApplicationForm.model.ts","./src/app/user/CarInsuranceApplicationForm/carInsurance.service.ts","./src/app/user/CarInsuranceApplicationForm/carInsuranceApplicationForm.component.ts","./src/app/user/CarInsuranceApplicationForm/carInsuranceApplicationForm.component.html"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { CarInsuranceDetailsModel } from \"../carInsuranceDetails.model\";\r\n\r\n@Component({\r\n    selector: 'app-car-insurance-details-table',\r\n    templateUrl: 'carInsuranceDetailsTable.component.html',\r\n    styleUrls: ['carInsuranceDetailsTable.component.css']\r\n})\r\nexport class CarInsuranceDetailsTableComponent implements OnInit{\r\n\r\n    @Input() insuranceDetail: CarInsuranceDetailsModel;\r\n\r\n    ngOnInit() {\r\n        // console.log(this.insuranceDetail);\r\n    }  \r\n\r\n    getProperDate(utcDate) {\r\n        if(utcDate === null){\r\n            return utcDate;\r\n        }\r\n        console.log(\"######################\");\r\n        console.log(new Date().toString().toLocaleString());\r\n        return new Date(utcDate).toString().slice(0, 33);\r\n    } \r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n            <table>\r\n            <!-- ---------------------------------------------------- -->\r\n                <thead>\r\n                    <tr>\r\n                        <th>Insurance Id</th>\r\n                        <th colspan=\"2\">Name of the Insurance Holder</th>\r\n                        <th>Aadhaar No</th>\r\n                        <th colspan=\"2\">Insured Vehicle License Plate No</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{{ insuranceDetail.insuranceId }}</td>\r\n                        <td colspan=\"2\">{{ insuranceDetail.customerName }}</td>\r\n                        <td>{{ insuranceDetail.aadhaarNo }}</td>\r\n                        <td colspan=\"2\">{{ insuranceDetail.licensePlateNo }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            <!-- ---------------------------------------------------- -->\r\n                <thead>\r\n                    <tr>\r\n                        <th>Insured Vehicle Model</th>\r\n                        <th colspan=\"2\">Insurence Applied On</th>\r\n                        <th>Insurance Plan</th>\r\n                        <th>Claim Status</th>\r\n                        <th>Claim Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{{ insuranceDetail.carModel }}</td>\r\n                        <td colspan=\"2\">{{ getProperDate(insuranceDetail.insuranceAppliedDate) }}</td>\r\n                        <td>{{ insuranceDetail.insurancePlan }}</td>\r\n                        <td>{{ insuranceDetail.claimStatus }}</td>\r\n                        <td>{{ getProperDate(insuranceDetail.insuranceClaimedDate) }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            <!-- ---------------------------------------------------- -->\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=\"6\" style=\"text-align: center;\">Insurer's Address and Contact Details</th>\r\n                    </tr>\r\n                </thead>\r\n            <!-- ---------------------------------------------------- -->\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=\"2\">Street</th>\r\n                        <th colspan=\"2\">City</th>\r\n                        <th colspan=\"2\">Pincode</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td colspan=\"2\">{{ insuranceDetail.street }}</td>\r\n                        <td colspan=\"2\">{{ insuranceDetail.city }}</td>\r\n                        <td colspan=\"2\">{{ insuranceDetail.pincode }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            <!-- ---------------------------------------------------- -->\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=\"2\">State</th>\r\n                        <th colspan=\"2\">Country</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td colspan=\"2\">{{ insuranceDetail.state }}</td>\r\n                        <td colspan=\"2\">{{ insuranceDetail.country }}</td>\r\n                        <td>{{ insuranceDetail.email }}</td>\r\n                        <td>{{ insuranceDetail.phone }}</td>     \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n<hr>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../Forms/Login/login.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  userName = \"\";\n  constructor(private loginService: LoginService,\n              private router: Router\n            ) { \n  }\n\n  ngOnInit() {\n      if(!this.loginService.getLoggedInUser().isAdmin){\n        this.userName = this.loginService.getLoggedInUser()['userName'];\n      }\n      else{\n        this.router.navigate(['/home']);\n      }\n      \n  }\n\n}","<!-- <h2>Welcome {{ userName }}</h2>\n<h4>This is a secure page.</h4> -->\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <div class=\"dropdown\">\n                <button class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\">\n                    More <span class=\"caret\"></span>\n                </button>\n                <ul class=\"dropdown-menu\">\n                    <li><a routerLink=\"car-insurance-apply\">Apply for car insurance</a></li>\n                    <li><a routerLink=\"car-insurance-details\">View my car insurance details</a></li>\n                    <li><a routerLink=\"car-insurance-claim\">Claim my car insurance</a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<router-outlet></router-outlet>","import { Component, OnInit } from \"@angular/core\";\r\nimport { CarInsuranceService } from \"../CarInsuranceApplicationForm/carInsurance.service\";\r\nimport { CarInsuranceDetailsModel } from \"./carInsuranceDetails.model\";\r\n\r\n@Component({\r\n    selector: 'app-my-car-insurance-details',\r\n    templateUrl: 'carInsuranceDetails.component.html',\r\n    styleUrls: ['carInsuranceDetails.component.css']\r\n})\r\nexport class MyCarInsuranceDetailsComponent implements OnInit{\r\n    myDetails: CarInsuranceDetailsModel[] = [];\r\n    isThereAnyDetails = false;\r\n    isLoading = true;\r\n\r\n    constructor(private carInsuranceService: CarInsuranceService) { }\r\n\r\n    ngOnInit() {\r\n        this.carInsuranceService.getCarInsuranceDetails()\r\n            .subscribe(res=> {\r\n                // console.log(res);\r\n                this.myDetails = res;\r\n                console.log(this.myDetails);\r\n                if(this.myDetails.length > 0 ){\r\n                    this.isThereAnyDetails = true;\r\n                }\r\n                else{\r\n                    this.isThereAnyDetails = false;\r\n                }\r\n                this.isLoading = false;\r\n            }, (error)=>{\r\n                console.error(error);\r\n            });\r\n    }\r\n}","<div class=\"container\" *ngIf=\"!isThereAnyDetails && !isLoading\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n            <h3>You have not applied for any car insurance yet! </h3>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"isLoading\" class=\"spinner\">\r\n    <app-loading-spinner></app-loading-spinner>\r\n</div>\r\n\r\n<app-car-insurance-details-table \r\n    *ngFor=\"let myDetail of myDetails\"\r\n    [insuranceDetail]=\"myDetail\"\r\n>\r\n</app-car-insurance-details-table>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserComponent } from './user.component';\nimport { CarInsuranceApplicationFormComponent } from './CarInsuranceApplicationForm/carInsuranceApplicationForm.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CarInsuranceService } from './CarInsuranceApplicationForm/carInsurance.service';\nimport { CarInsuranceApplicationSuccessPageComponent } from './CarInsuranceApplicationSuccessPage/carInsuranceApplicationSuccessPage.component';\nimport { MyCarInsuranceDetailsComponent } from './CarInsuranceDetails/carInsuranceDetails.component';\nimport { CarInsuranceDetailsTableComponent } from './CarInsuranceDetails/CarInsuranceDetailsTable/carInsuranceDetailsTable.component';\nimport { CarInsuranceClaimComponent } from './CarInsuranceClaim/carInsuranceClaim.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n                  UserComponent,\n                  CarInsuranceApplicationFormComponent,\n                  CarInsuranceApplicationSuccessPageComponent,\n                  MyCarInsuranceDetailsComponent,\n                  CarInsuranceDetailsTableComponent,\n                  CarInsuranceClaimComponent,\n                ],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  providers: [\n    CarInsuranceService\n  ]\n})\nexport class UserModule { }\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { CarInsuranceService } from \"../CarInsuranceApplicationForm/carInsurance.service\";\r\n\r\n@Component({\r\n    selector: 'app-car-insurance-claim',\r\n    templateUrl: 'carInsuranceClaim.component.html',\r\n    styleUrls: ['carInsuranceClaim.component.css']\r\n})\r\nexport class CarInsuranceClaimComponent{\r\n\r\n    @ViewChild(\"carInsuranceClaimForm\") carInsuranceClaimForm: NgForm;\r\n\r\n    claimBtnPressed = false;\r\n\r\n    claimSuccessful:boolean = false;\r\n    claimedAlready:boolean = false;\r\n    invalidClaim:boolean = false;\r\n\r\n    constructor(private carInsuranceService: CarInsuranceService) { }\r\n\r\n    onClaim() {\r\n        // console.log(this.carInsuranceClaimForm);\r\n        this.claimBtnPressed = true;\r\n        this.carInsuranceService.claimCarInsurance(this.carInsuranceClaimForm.value)\r\n        .subscribe(res=> {\r\n            console.log(res);\r\n            //msg = 1 means Insurance Id and Email are clashing.\r\n            //msg = -1 means Insurance Id doesn't exist in records.\r\n            //msg = 0 means this Insurance Id has been already claimed. \r\n            if(res[\"msg\"] === \"-1\" || res[\"msg\"] === \"1\"){\r\n                this.invalidClaim = true;\r\n                this.claimedAlready = false;\r\n                this.claimSuccessful = false;\r\n            }\r\n            if(res[\"msg\"] === \"0\" ){\r\n                this.invalidClaim = false;\r\n                this.claimedAlready = true;\r\n                this.claimSuccessful = false;\r\n            }\r\n            if(res[\"msg\"] === \"Success!\" ){\r\n                this.invalidClaim = false;\r\n                this.claimedAlready = false;\r\n                this.claimSuccessful = true;\r\n            }\r\n        }, (error)=>{\r\n            console.error(error);\r\n        });\r\n    }\r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2\">\r\n            <form #carInsuranceClaimForm=\"ngForm\" (ngSubmit)=\"onClaim()\">\r\n                <div class=\"form-group\" \r\n                    [class.has-error]=\"carInsuranceClaimForm.invalid && carInsuranceClaimForm.touched\"\r\n                >\r\n                    <label for=\"insuranceId\">Enter the insurance id</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"insuranceId\" \r\n                        name=\"insuranceId\"\r\n                        class=\"form-control\"\r\n                        ngModel\r\n                        required\r\n                        pattern=\"[0-9]{7,7}\"\r\n                    >\r\n                    <span \r\n                        class=\"help-text text-danger\"\r\n                        *ngIf=\"carInsuranceClaimForm.invalid && carInsuranceClaimForm.touched\"\r\n                    >\r\n                        Insurance id is invalid !\r\n                    </span>\r\n                </div>\r\n                <button \r\n                    class=\"btn btn-primary\" \r\n                    [disabled]=\"carInsuranceClaimForm.invalid\"\r\n                >Claim Insurance</button>\r\n                <h3 \r\n                    class=\"text-success\"\r\n                    *ngIf=\"claimSuccessful\"\r\n                >\r\n                    Insurance claimed successfully!\r\n                </h3>\r\n                <h3 \r\n                    class=\"text-warning\"\r\n                    *ngIf=\"claimedAlready\"\r\n                >\r\n                    Insurance has already been claimed against this Insurance Id!\r\n                </h3>\r\n                <h3 \r\n                    class=\"text-danger\"\r\n                    *ngIf=\"invalidClaim\"\r\n                >\r\n                    Invalid Insurance Id!\r\n                </h3>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CarInsuranceService } from \"../CarInsuranceApplicationForm/carInsurance.service\";\r\nimport { CarInsuranceApplicationFormModel } from \"../CarInsuranceApplicationForm/carInsuranceApplicationForm.model\";\r\n\r\n@Component({\r\n    selector: 'app-car-insurance-success-page',\r\n    templateUrl: 'carInsuranceApplicationSuccessPage.component.html',\r\n    styleUrls: ['carInsuranceApplicationSuccessPage.component.css']\r\n})\r\nexport class CarInsuranceApplicationSuccessPageComponent implements OnInit{\r\n\r\n    ci_details: CarInsuranceApplicationFormModel;\r\n\r\n    constructor(private carInsuranceService: CarInsuranceService,\r\n                private router: Router){ \r\n                    this.ci_details = new CarInsuranceApplicationFormModel();\r\n                }\r\n\r\n    ngOnInit() {\r\n        // console.log(\"Inside carInsuranceApplicationSuccessPageComponent\");\r\n        if(this.carInsuranceService.isInsuranceApplied){\r\n            this.ci_details = this.carInsuranceService.insuranceDetails;\r\n        }\r\n        else{\r\n            this.router.navigate(['']);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.carInsuranceService.isInsuranceApplied = false;\r\n    }\r\n\r\n    getInsuranceAppliedDate(utcDate) {\r\n        return new Date(utcDate).toString().slice(0, 33);\r\n    }\r\n}","<div class=\"container\">\r\n    <div class=\"alert alert-success\">\r\n        Car Insurance applied <strong>successfully!</strong>\r\n    </div>\r\n    <!-- <h2 class=\"text-success\">Car Insurance applied successfully!</h2> -->\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-6\">\r\n            <div class=\"insurance-details\">\r\n                <h3>Car Insuarance Details:</h3>\r\n                <!-- <p>Insurance Id: {{ ci_details.insuranceId }}</p>\r\n                <p>Insured Car Model: {{ ci_details.carModel }}</p>\r\n                <p>Insured Car License Plate Number: {{ ci_details.licensePlateNo }}</p>\r\n                <p>Insurance Type: {{ ci_details.insuranceType }}</p>\r\n                <p>Insurance applied date: {{ ci_details.insuranceAppliedDate }}</p> -->\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Insurance Id</th>\r\n                            <th>Insured Car Model</th>\r\n                            <th>Insured Car License Plate Number</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{{ ci_details.insuranceId }}</td>\r\n                            <td>{{ ci_details.carModel }}</td>\r\n                            <td>{{ ci_details.licensePlateNo }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Insurance Type</th>\r\n                            <th colspan=\"2\">Insurance applied date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{{ ci_details.insurancePlan }}</td>\r\n                            <td colspan=\"2\">{{ getInsuranceAppliedDate(ci_details.insuranceAppliedDate) }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-xs-12 col-sm-5 col-sm-offset-1\">\r\n            <div class=\"applicant-details\">\r\n                <h3>Applicant Details:</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colspan=\"2\">Name</th>\r\n                            <th>Aadhaar No</th>\r\n                            <th>Email</th>\r\n                            <th>Phone Number</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td colspan=\"2\">{{ ci_details.customerName }}</td>\r\n                            <td>{{ ci_details.aadhaarNo }}</td>\r\n                            <td>{{ ci_details.email }}</td>\r\n                            <td>{{ ci_details.phone }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colspan=\"3\">Street</th>\r\n                            <th>City</th>\r\n                            <th>Pincode</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td colspan=\"3\">{{ ci_details.address.street }}</td>\r\n                            <td>{{ ci_details.address.city }}</td>\r\n                            <td>{{ ci_details.address.pincode }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colspan=\"3\">State</th>\r\n                            <th colspan=\"2\">Country</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td colspan=\"3\">{{ ci_details.address.state }}</td>\r\n                            <td colspan=\"2\">{{ ci_details.address.country }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <!-- <p>Name: {{ ci_details.name }}</p>\r\n                <p>Aadhaar No: {{ ci_details.aadhaar }}</p>\r\n                <p>Email: {{ ci_details.email }}</p>\r\n                <p>Phone Number: {{ ci_details.phone }}</p>\r\n                <p>Street: {{ ci_details.address.street }}</p>\r\n                <p>City: {{ ci_details.address.city }}</p>\r\n                <p>Pincode: {{ ci_details.address.pincode }}</p>\r\n                <p>State: {{ ci_details.address.state }}</p>\r\n                <p>Country: {{ ci_details.address.country }}</p> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CarInsuranceApplicationFormComponent } from './CarInsuranceApplicationForm/carInsuranceApplicationForm.component';\nimport { CarInsuranceApplicationSuccessPageComponent } from './CarInsuranceApplicationSuccessPage/carInsuranceApplicationSuccessPage.component';\nimport { CarInsuranceClaimComponent } from './CarInsuranceClaim/carInsuranceClaim.component';\nimport { MyCarInsuranceDetailsComponent } from './CarInsuranceDetails/carInsuranceDetails.component';\n\nimport { UserComponent } from './user.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: UserComponent,\n    children: [\n      {\n        path: 'car-insurance-apply',\n        component: CarInsuranceApplicationFormComponent\n      },\n      {\n        path: 'car-insurance-success',\n        component: CarInsuranceApplicationSuccessPageComponent\n      },\n      {\n        path: 'car-insurance-details',\n        component: MyCarInsuranceDetailsComponent\n      },\n      {\n        path: 'car-insurance-claim',\n        component: CarInsuranceClaimComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","export class CarInsuranceApplicationFormModel {\r\n    aadhaarNo: number;\r\n    customerName: string;\r\n    address: {\r\n        street: string,\r\n        city: string,\r\n        pincode: number,\r\n        state: string,\r\n        country: string\r\n    };\r\n    phone: number;\r\n    email: string;\r\n    carModel: string;\r\n    licensePlateNo: string;\r\n    insurancePlan: string;\r\n    insuranceId?: number;\r\n    insuranceAppliedDate?: string;\r\n    insuranceClaimedDate?: string;\r\n    claimStatus?: string;\r\n    \r\n    constructor(){\r\n        this.aadhaarNo = null;\r\n        this.customerName = '';\r\n        this.address = { \r\n            'street': '',\r\n            'city': '',\r\n            'pincode': null,\r\n            'state': null,\r\n            'country': null\r\n        }\r\n        this.phone = null;\r\n        this.email = '';\r\n        this.carModel = '',\r\n        this.licensePlateNo = '',\r\n        this.insurancePlan = '',\r\n        this.insuranceId = null;\r\n        this.claimStatus = null;\r\n    }\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { CarInsuranceApplicationFormModel } from \"./carInsuranceApplicationForm.model\";\r\nimport { CarInsuranceDetailsModel } from \"../CarInsuranceDetails/carInsuranceDetails.model\";\r\nimport { environment } from \"../../../environments/environment\"; \r\n\r\n@Injectable()\r\nexport class CarInsuranceService {\r\n\r\n    insuranceDetails: CarInsuranceApplicationFormModel;\r\n    insuranceTakenOn: string;\r\n    // isInsuranceApplied property is used to decide whether to display the \r\n    // carInsuranceSuccessPageComponent or not.\r\n    isInsuranceApplied: boolean;\r\n    \r\n    private _carInsuranceApplyApi = environment.apiURL+\"car-insurance/apply\";\r\n    private _carInsuranceDetailsApi = environment.apiURL+\"car-insurance/details\";\r\n    private _carInsuranceClaimApi = environment.apiURL+\"car-insurance/claim\";\r\n    \r\n    constructor(private http: HttpClient) { }\r\n\r\n    applyCarInsurance(insuranceDetails:CarInsuranceApplicationFormModel): Observable<[]>{\r\n        insuranceDetails.insuranceAppliedDate = this.insuranceTakenOn;\r\n        return this.http.post<[]>(this._carInsuranceApplyApi, insuranceDetails);\r\n    }\r\n\r\n    getCarInsuranceDetails(): Observable<CarInsuranceDetailsModel[]> {\r\n        return this.http.get<CarInsuranceDetailsModel[]>(this._carInsuranceDetailsApi);\r\n    }\r\n\r\n    claimCarInsurance(claimData): Observable<{string: string}> {\r\n        claimData[\"claimDate\"] = this.getDate();\r\n        return this.http.post<{string: string}>(this._carInsuranceClaimApi, {claimData: claimData});\r\n    }\r\n\r\n    getDate() {\r\n        var x = new Date();\r\n        var year = x.getFullYear();\r\n        var month = x.getMonth()<10? 0+\"\"+(x.getMonth()+1): (x.getMonth()+1);\r\n        var date = x.getDate()<10? 0+\"\"+x.getDate(): x.getDate();\r\n        var time = x.toLocaleTimeString();\r\n        if(time.includes(\"PM\")) {\r\n            if(parseInt(time.split(\":\")[0])!=12) {\r\n                time=(parseInt(time.charAt(0))+12)+time.substring(1, time.indexOf('PM')-1);\r\n            }\r\n            else {\r\n                time.substring(0, time.indexOf('PM')-1)\r\n            }\r\n        }\r\n        else if(time.includes(\"AM\")) {\r\n            if(parseInt(time.split(\":\")[0])!=12) {\r\n                time=time.substring(0, time.indexOf('AM')-1);\r\n            }\r\n            else {\r\n                time=\"00\"+time.substring(2, time.indexOf('AM')-1);\r\n            }\r\n        }\r\n        return year+\"-\"+month+\"-\"+date+\" \"+time;\r\n    }\r\n    \r\n}","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { LoginService } from \"src/app/Forms/Login/login.service\";\r\nimport { CarInsuranceService } from \"./carInsurance.service\";\r\n\r\n@Component({\r\n    selector: 'app-car-insurance-application-form',\r\n    templateUrl: 'carInsuranceApplicationForm.component.html',\r\n    styleUrls: ['carInsuranceApplicationForm.component.css']\r\n})\r\nexport class CarInsuranceApplicationFormComponent { \r\n\r\n    constructor(private fb: FormBuilder,\r\n                private carInsuranceService: CarInsuranceService,\r\n                private loginService: LoginService,\r\n                private route: ActivatedRoute,\r\n                private router: Router){ }\r\n\r\n    // emailFieldDisabled = true;\r\n\r\n    insuranceApplication = this.fb.group({\r\n        aadhaarNo: ['', [Validators.required, Validators.pattern('[0-9]{12,12}')]],\r\n        customerName: ['', [Validators.required, Validators.pattern(\"[a-zA-Z ]*\"), Validators.minLength(3), Validators.maxLength(30)]],\r\n        address: this.fb.group({\r\n            street: ['', [Validators.required, Validators.pattern(\"[a-zA-Z0-9\\- ]*\"), Validators.minLength(7), Validators.maxLength(50)]],\r\n            city: ['', [Validators.required, Validators.pattern(\"[a-zA-Z ]*\"), Validators.minLength(4), Validators.maxLength(35)]],\r\n            pincode: ['', [Validators.required, Validators.pattern('[0-9]{6,6}')]],\r\n            state: ['', [Validators.required, Validators.pattern(\"[a-zA-Z ]*\"), Validators.minLength(3), Validators.maxLength(35)]],\r\n            country: ['', [Validators.required, Validators.pattern(\"[a-zA-Z ]*\"), Validators.minLength(5), Validators.maxLength(35)]],\r\n        }),\r\n        phone: ['', [Validators.required, Validators.pattern('[0-9]{10,10}')]],\r\n        email: [this.loginService.getLoggedInUser().email, [Validators.required, Validators.email]],\r\n        carModel: ['', [Validators.required, Validators.pattern(\"[a-zA-Z0-9 ]*\"), Validators.minLength(4), Validators.maxLength(25)]],\r\n        licensePlateNo: ['', [Validators.required, Validators.pattern(\"[a-zA-Z0-9 ]*\"), Validators.minLength(6), Validators.maxLength(6)]],\r\n        insurancePlan: ['comprehensive']\r\n\r\n    })\r\n\r\n    onSubmit(){\r\n        console.log(this.insuranceApplication.value);\r\n        this.carInsuranceService.insuranceTakenOn = this.carInsuranceService.getDate();\r\n        console.log(this.carInsuranceService.insuranceTakenOn);\r\n        this.carInsuranceService.applyCarInsurance(this.insuranceApplication.value)\r\n        .subscribe(res=>{\r\n            console.log(res);\r\n            if(res[\"msg\"] === \"0\"){\r\n                alert(\"Duplicate license plate number!\");\r\n            }\r\n            else if(res[\"msg\"] === \"-1\"){\r\n                alert(\"Something went wrong!\");\r\n            }\r\n            else if(res[\"msg\"] === \"1\"){\r\n                alert(\"Email you entered must be same as your account email id!\");\r\n            }\r\n            else{\r\n                console.log(res[\"insuranceId\"]);\r\n                this.carInsuranceService.isInsuranceApplied = true;\r\n                this.carInsuranceService.insuranceDetails = this.insuranceApplication.value; \r\n                this.carInsuranceService.insuranceDetails.insuranceId = res[\"insuranceId\"];\r\n                console.log(this.carInsuranceService.insuranceDetails);\r\n                this.router.navigate(['user','car-insurance-success']);\r\n            }\r\n        }, (error)=> {\r\n            console.error(error);\r\n        });\r\n    }\r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2\">\r\n            <h3 style=\"text-align: center;\">Car Insurance Application Form</h3>\r\n            <form [formGroup]=\"insuranceApplication\" (ngSubmit)=\"onSubmit()\">\r\n                <!-- {{ insuranceApplication.value | json }} -->\r\n                <div class=\"form-group\">\r\n                    <label for=\"aadhaar-no\">Aadhaar Number</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"aadhaar-no\" \r\n                        name=\"aadhaar-no\"\r\n                        class=\"form-control\"\r\n                        formControlName=\"aadhaarNo\"\r\n                    >\r\n                    <div *ngIf=\"insuranceApplication.get('aadhaarNo').invalid && insuranceApplication.get('aadhaarNo').touched\">\r\n                        <span \r\n                        class=\"help-text text-danger\" \r\n                        *ngIf=\"insuranceApplication.get('aadhaarNo').errors.required\"\r\n                        >\r\n                        Aadhaar is required!\r\n                        </span>\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('aadhaarNo').errors.pattern\"\r\n                        >\r\n                            An aadhaar number must contin 12 digits.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"name\">Name</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"name\" \r\n                        name=\"name\"\r\n                        class=\"form-control\"\r\n                        formControlName=\"customerName\"\r\n                    >\r\n                    <div *ngIf=\"insuranceApplication.get('customerName').invalid && insuranceApplication.get('customerName').touched\">\r\n                        <span \r\n                            class=\"help-text text-danger\" \r\n                            *ngIf=\"insuranceApplication.get('customerName').errors.required\"\r\n                        >\r\n                            Name is required!\r\n                        </span>\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('customerName').errors.pattern\"\r\n                        >\r\n                            Name can contain only [A-Z, a-z, space character].\r\n                        </span>\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('customerName').errors.minlength || insuranceApplication.get('customerName').errors.maxlength\"\r\n                        >\r\n                            Name must have a minimum of 3 and a maximum of 30 characters!\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div formGroupName=\"address\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"street\">Street</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"street\" \r\n                            name=\"street\" \r\n                            class=\"form-control\" \r\n                            formControlName=\"street\"\r\n                        >\r\n                        <div *ngIf=\"insuranceApplication.get('address.street').invalid && insuranceApplication.get('address.street').touched\">\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.street').errors.required\"\r\n                            >\r\n                                Street is required!\r\n                            </span>\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.street').errors.pattern\"\r\n                            >\r\n                                Street can contain only alphanumeric characters, dashes and space!\r\n                            </span>\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.street').errors.minlength || insuranceApplication.get('address.street').errors.maxlength\"\r\n                            >\r\n                                Street must have a minimum of 7 and a maximum of 50 characters!\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"city\">City</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"city\" \r\n                            name=\"city\" \r\n                            class=\"form-control\" \r\n                            formControlName=\"city\"\r\n                        >\r\n                        <div *ngIf=\"insuranceApplication.get('address.city').invalid && insuranceApplication.get('address.city').touched\">\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.city').errors.required\"\r\n                            >\r\n                                City is required!\r\n                            </span>\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.city').errors.pattern\"\r\n                            >\r\n                                City can contain only alphabets and space!\r\n                            </span>\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.city').errors.minlength || insuranceApplication.get('address.city').errors.maxlength\"\r\n                            >\r\n                                City must have a minimum of 4 and a maximum of 35 characters!\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"postal-code\">Pin Code</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"postal-code\" \r\n                            name=\"postal-code\" \r\n                            class=\"form-control\" \r\n                            formControlName=\"pincode\"\r\n                        >\r\n                        <div *ngIf=\"insuranceApplication.get('address.pincode').invalid && insuranceApplication.get('address.pincode').touched\">\r\n                            <span\r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.pincode').errors.required\"\r\n                            >\r\n                                Pincode is required!\r\n                            </span>\r\n                            <span\r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.pincode').errors.pattern\"\r\n                            >\r\n                                Pincode must contain 6 digits!\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"state\">State</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"state\" \r\n                            name=\"state\" \r\n                            class=\"form-control\" \r\n                            formControlName=\"state\"\r\n                        >\r\n                        <div *ngIf=\"insuranceApplication.get('address.state').invalid && insuranceApplication.get('address.state').touched\">\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.state').errors.required\"\r\n                            >\r\n                                State is required!\r\n                            </span>\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.state').errors.pattern\"\r\n                            >\r\n                                State can contain only alphabets and space!\r\n                            </span>\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.state').errors.minlength || insuranceApplication.get('address.state').errors.maxlength\"\r\n                            >\r\n                                State must have a minimum of 3 and a maximum of 35 characters!\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"country\">Country</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"country\" \r\n                            name=\"country\" \r\n                            class=\"form-control\" \r\n                            formControlName=\"country\"\r\n                        >\r\n                        <div *ngIf=\"insuranceApplication.get('address.country').invalid && insuranceApplication.get('address.country').touched\">\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.country').errors.required\"\r\n                            >\r\n                                Country is required!\r\n                            </span>\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.country').errors.pattern\"\r\n                            >\r\n                                Country can contain only alphabets and space!\r\n                            </span>\r\n                            <span \r\n                                class=\"help-text text-danger\"\r\n                                *ngIf=\"insuranceApplication.get('address.country').errors.minlength || insuranceApplication.get('address.country').errors.maxlength\"\r\n                            >\r\n                                Country must have a minimum of 5 and a maximum of 35 characters!\r\n                            </span>\r\n                        </div>\r\n                    </div>    \r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"aadhaar-no\">Phone Number</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"phone\" \r\n                        name=\"phone\"\r\n                        class=\"form-control\"\r\n                        formControlName=\"phone\"\r\n                    >\r\n                    <div *ngIf=\"insuranceApplication.get('phone').invalid && insuranceApplication.get('phone').touched\">\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('phone').errors.required\"\r\n                        >\r\n                            Phone number is required!.\r\n                        </span>\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('phone').errors.pattern\"\r\n                        >\r\n                            Phone number must contain 10 digits!\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"aadhaar-no\">Email</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"email\" \r\n                        name=\"email\"\r\n                        class=\"form-control\"\r\n                        formControlName=\"email\"\r\n                    >\r\n                    <div *ngIf=\"insuranceApplication.get('email').invalid && insuranceApplication.get('email').touched\">\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('email').errors.required\"\r\n                        >\r\n                            Email is required!\r\n                        </span>\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('email').errors.email\"\r\n                        >\r\n                            Invalid email!\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"aadhaar-no\">Car Model</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"car-model\" \r\n                        name=\"car-model\"\r\n                        class=\"form-control\"\r\n                        formControlName=\"carModel\"\r\n                    >\r\n                    <div *ngIf=\"insuranceApplication.get('carModel').invalid && insuranceApplication.get('carModel').touched\">\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('carModel').errors.required\"\r\n                        >\r\n                            Car model name is required!\r\n                        </span>\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('carModel').errors.pattern\"\r\n                        >\r\n                            Car model name can contain only alphanumeric characters and space!\r\n                        </span>\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('carModel').errors.minlength || insuranceApplication.get('carModel').errors.maxlength\"\r\n                        >\r\n                            Car model name must have a minimum of 4 and a maximum of 25 characters!\r\n                        </span>\r\n                    </div>    \r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"aadhaar-no\">License Plate Number</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        id=\"lp-no\" \r\n                        name=\"lp-no\"\r\n                        class=\"form-control\"\r\n                        formControlName=\"licensePlateNo\"\r\n                    >\r\n                    <div *ngIf=\"insuranceApplication.get('licensePlateNo').invalid && insuranceApplication.get('licensePlateNo').touched\">\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('licensePlateNo').errors.required\"\r\n                        >\r\n                            License plate number is required!\r\n                        </span>\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('licensePlateNo').errors.pattern\"\r\n                        >\r\n                            License plate number can contain only alphanumeric characters and space!\r\n                        </span>\r\n                        <span \r\n                            class=\"help-text text-danger\"\r\n                            *ngIf=\"insuranceApplication.get('licensePlateNo').errors.minlength || insuranceApplication.get('licensePlateNo').errors.maxlength\"\r\n                        >\r\n                            License plate number must contain 6 characters!\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"car-insurance-type\">Type of Car Insurance</label>\r\n                    <select \r\n                      id=\"insurance-typet\" \r\n                      class=\"form-control\"\r\n                      name=\"car-insurance-type\"\r\n                      formControlName=\"insurancePlan\"\r\n                    >\r\n                      <option value=\"third-party\">Third Party</option>\r\n                      <option value=\"comprehensive\">Comprehensive</option>\r\n                    </select>\r\n                </div>\r\n                <p class=\"help-text text-danger\"\r\n                   *ngIf=\"insuranceApplication.invalid && insuranceApplication.touched\"\r\n                >\r\n                    Form is invalid!\r\n                </p>\r\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"insuranceApplication.invalid\">Submit</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}